<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.Http.OData</name>
  </assembly>
  <members>
    <member name="T:System.Net.Http.ODataHttpRequestMessageExtensions">
      <summary> Предоставляет методы расширения для класса <see cref="T:System.Net.Http.HttpRequestMessage" />. </summary>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.CreateODataErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,Microsoft.Data.OData.ODataError)">
      <summary> Вспомогательный метод, который выполняет согласование содержимого и создает <see cref="T:System.Net.Http.HttpResponseMessage" />, представляя ошибку с экземпляром &lt;see cref="T:System.Net.Http.ObjectContent`1" /&gt;, который помещает в оболочку oDataError в качестве содержимого. Если модуль форматирования не удалось найти, метод возвращает ответ с состоянием 406 NotAcceptable. </summary>
      <returns>Ответ на ошибку, заключающий oDataError с кодом состоянияstatusCode.</returns>
      <param name="request">Запрос.</param>
      <param name="statusCode">Код состояния созданного ответа.</param>
      <param name="oDataError">Ошибка помещения OData в оболочку.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetEdmModel(System.Net.Http.HttpRequestMessage)">
      <summary> Извлекает модель EDM, связанную с запросом. </summary>
      <returns>Модель EDM, связанная с запросом, или значение null, если ее нет.</returns>
      <param name="request">Запрос.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetInlineCount(System.Net.Http.HttpRequestMessage)">
      <summary> Получает встроенное количество, используемое для ответа OData. </summary>
      <returns>Встроенное количество для обратной отправки или null, если его нет.</returns>
      <param name="request">Запрос.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetNextPageLink(System.Net.Http.HttpRequestMessage)">
      <summary> Получает ссылку на следующую страницу, используемую для ответа OData. </summary>
      <returns>Ссылка на следующую страницу для обратной отправки или значение null, если ее нет.</returns>
      <param name="request">Запрос.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetODataPath(System.Net.Http.HttpRequestMessage)">
      <summary> Получает путь OData запроса. </summary>
      <returns>Путь OData запроса</returns>
      <param name="request">Запрос.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetODataPathHandler(System.Net.Http.HttpRequestMessage)">
      <summary> Получает <see cref="T:System.Web.Http.OData.Routing.IODataPathHandler" /> для генерации ссылок. </summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Routing.IODataPathHandler" /> для генерации ссылок.</returns>
      <param name="request">Запрос.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetODataRouteName(System.Net.Http.HttpRequestMessage)">
      <summary> Получает имя маршрута для генерации ссылок OData. </summary>
      <returns>Имя маршрута для генерации ссылок OData, связанных с запросом, или значение null, если его нет.</returns>
      <param name="request">Запрос.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetODataRoutingConventions(System.Net.Http.HttpRequestMessage)">
      <summary> Получает соглашение о маршрутизации OData для выбора контроллера и действия. </summary>
      <returns>Соглашение о маршрутизации OData для выбора контроллера и действия, связанных с этим запросом, или значение null, если его нет.</returns>
      <param name="request">Запрос.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetEdmModel(System.Net.Http.HttpRequestMessage,Microsoft.Data.Edm.IEdmModel)">
      <summary> Связывает указанную модель EDM с запросом. </summary>
      <param name="request">Запрос.</param>
      <param name="model">Модель EDM для связывания с запросом.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetInlineCount(System.Net.Http.HttpRequestMessage,System.Int64)">
      <summary> Устанавливает встроенное количество, используемое для ответа OData. </summary>
      <param name="request">Запрос.</param>
      <param name="inlineCount">Встроенное количество для обратной отправки клиенту.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetNextPageLink(System.Net.Http.HttpRequestMessage,System.Uri)">
      <summary> Устанавливает ссылку на следующую страницу, используемую для ответа OData. </summary>
      <param name="request">Запрос.</param>
      <param name="nextPageLink">Ссылка на следующую страницу для обратной отправки клиенту.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetODataPath(System.Net.Http.HttpRequestMessage,System.Web.Http.OData.Routing.ODataPath)">
      <summary> Настраивает путь OData для запроса. </summary>
      <param name="request">Запрос.</param>
      <param name="odataPath">Путь OData запроса.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetODataPathHandler(System.Net.Http.HttpRequestMessage,System.Web.Http.OData.Routing.IODataPathHandler)">
      <summary> Устанавливает <see cref="T:System.Web.Http.OData.Routing.IODataPathHandler" /> для генерации ссылок. </summary>
      <param name="request">Запрос.</param>
      <param name="pathHandler">
        <see cref="T:System.Web.Http.OData.Routing.IODataPathHandler" /> для генерации ссылок.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetODataRouteName(System.Net.Http.HttpRequestMessage,System.String)">
      <summary> Устанавливает указанное имя маршрута для генерации ссылок OData. </summary>
      <param name="request">Запрос.</param>
      <param name="routeName">Имя маршрута для генерации ссылок OData.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetODataRoutingConventions(System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention})">
      <summary> Устанавливает соглашение о маршрутизации OData для выбора контроллера и действия. </summary>
      <param name="request">Запрос.</param>
      <param name="routingConventions">Соглашения о маршрутизации OData для выбора контроллера и действия.</param>
    </member>
    <member name="T:System.Web.Http.ODataHttpConfigurationExtensions"></member>
    <member name="M:System.Web.Http.ODataHttpConfigurationExtensions.EnableQuerySupport(System.Web.Http.HttpConfiguration)">
      <summary>Позволяет запросу поддерживать действия с возвращаемым типом <see cref="T:System.Linq.IQueryable" /> или <see cref="T:System.Linq.IQueryable`1" />. Чтобы избежать обработки неожиданных или вредоносных запросов, используйте параметры проверки в <see cref="T:System.Web.Http.QueryableAttribute" />, чтобы проверять входящие запросы. Дополнительные сведения см. в разделе http://go.microsoft.com/fwlink/?LinkId=279712.            </summary>
      <param name="configuration">Конфигурация сервера.</param>
    </member>
    <member name="M:System.Web.Http.ODataHttpConfigurationExtensions.EnableQuerySupport(System.Web.Http.HttpConfiguration,System.Web.Http.Filters.IActionFilter)">
      <summary>Позволяет запросу поддерживать действия с возвращаемым типом <see cref="T:System.Linq.IQueryable" /> или <see cref="T:System.Linq.IQueryable`1" />. . Чтобы избежать обработки неожиданных или вредоносных запросов, используйте параметры проверки в <see cref="T:System.Web.Http.QueryableAttribute" />, чтобы проверять входящие запросы. Дополнительные сведения см. в разделе http://go.microsoft.com/fwlink/?LinkId=279712.</summary>
      <param name="configuration">Конфигурация сервера.</param>
      <param name="queryFilter">Фильтр действий, который выполняет запрос.</param>
    </member>
    <member name="T:System.Web.Http.ODataHttpErrorExtensions">
      <summary>Предоставляет методы расширения для класса <see cref="T:System.Web.Http.HttpError" />.</summary>
    </member>
    <member name="M:System.Web.Http.ODataHttpErrorExtensions.ToODataError(System.Web.Http.HttpError)">
      <summary>Преобразует <paramref name="httpError" /> в <see cref="T:Microsoft.Data.OData.ODataError" />.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.Data.OData.ODataError" />.</returns>
      <param name="httpError">Экземпляр <see cref="T:System.Web.Http.HttpError" /> для преобразования.</param>
    </member>
    <member name="T:System.Web.Http.ODataHttpRouteCollectionExtensions">
      <summary>Предоставляет методы расширения для класса <see cref="T:System.Web.Http.HttpRouteCollection" />.</summary>
    </member>
    <member name="M:System.Web.Http.ODataHttpRouteCollectionExtensions.MapODataRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,Microsoft.Data.Edm.IEdmModel)">
      <summary>Сопоставляет указанный маршрут без префикса маршрута и с использованием имени маршрута OData.</summary>
      <param name="routes">Коллекция маршрутов для приложения.</param>
      <param name="routeName">Имя сопоставляемого маршрута.</param>
      <param name="routePrefix">Префикс, который необходим для добавления в шаблон пути маршрута OData.</param>
      <param name="model">Модель EDM для синтаксического анализа путей OData.</param>
    </member>
    <member name="M:System.Web.Http.ODataHttpRouteCollectionExtensions.MapODataRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.IODataPathHandler,System.Collections.Generic.IEnumerable{System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention})">
      <param name="routes">Коллекция маршрутов для приложения.</param>
      <param name="routeName">Имя сопоставляемого маршрута.</param>
      <param name="routePrefix">Префикс, который необходим для добавления в шаблон пути маршрута OData.</param>
      <param name="model">Модель EDM для синтаксического анализа путей OData.</param>
      <param name="pathHandler">
        <see cref="T:System.Web.Http.OData.Routing.IODataPathHandler" /> для синтаксического анализа путей OData.</param>
      <param name="routingConventions">Соглашения о маршрутизации OData для выбора контроллера и действия.</param>
    </member>
    <member name="T:System.Web.Http.ODataMediaTypeFormatterCollectionExtensions">
      <summary>Предоставляет методы расширения для класса <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection" />.</summary>
    </member>
    <member name="M:System.Web.Http.ODataMediaTypeFormatterCollectionExtensions.AddRange(System.Net.Http.Formatting.MediaTypeFormatterCollection,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Добавляет элементы указанной коллекции в конец <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection" />.</summary>
      <param name="collection">Коллекция, в которую необходимо добавить элементы.</param>
      <param name="items">Элементы, которые необходимо добавить в конец <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection" />. Коллекция элементов не может быть со значением null, но она может содержать элементы со значением null.</param>
    </member>
    <member name="M:System.Web.Http.ODataMediaTypeFormatterCollectionExtensions.InsertRange(System.Net.Http.Formatting.MediaTypeFormatterCollection,System.Int32,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>  Вставляет элементы коллекции в <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection" /> по указанному индексу.</summary>
      <param name="collection">Коллекция, в которую необходимо добавить элементы.</param>
      <param name="index">Отсчитываемый от нуля индекс, по которому следует вставить новые элементы.</param>
      <param name="items">Элементы, которые необходимо добавить в конец <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection" />. Коллекция элементов не может быть со значением null, но она может содержать элементы со значением null.</param>
    </member>
    <member name="T:System.Web.Http.ODataUrlHelperExtensions">
      <summary>Предоставляет методы расширения для класса <see cref="T:System.Web.Http.Routing.UrlHelper" />.</summary>
    </member>
    <member name="M:System.Web.Http.ODataUrlHelperExtensions.ODataLink(System.Web.Http.Routing.UrlHelper,System.Collections.Generic.IList{System.Web.Http.OData.Routing.ODataPathSegment})">
      <summary>Генерирует ссылку OData.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
      <param name="urlHelper">Вспомогательный метод URL-адреса.</param>
      <param name="segments">Сегменты пути OData.</param>
    </member>
    <member name="M:System.Web.Http.ODataUrlHelperExtensions.ODataLink(System.Web.Http.Routing.UrlHelper,System.String,System.Web.Http.OData.Routing.IODataPathHandler,System.Collections.Generic.IList{System.Web.Http.OData.Routing.ODataPathSegment})">
      <summary>Создает ссылку OData, используя имя маршрута и обработчик пути запроса OData.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
      <param name="urlHelper">Вспомогательный метод URL-адреса.</param>
      <param name="routeName">Имя маршрута OData.</param>
      <param name="pathHandler">Обработчик пути для использования при генерации ссылки.</param>
      <param name="segments">Сегменты пути OData.</param>
    </member>
    <member name="M:System.Web.Http.ODataUrlHelperExtensions.ODataLink(System.Web.Http.Routing.UrlHelper,System.Web.Http.OData.Routing.ODataPathSegment[])">
      <summary>Генерирует ссылку OData.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
      <param name="urlHelper">Вспомогательный метод URL-адреса.</param>
      <param name="segments">Сегменты пути OData.</param>
    </member>
    <member name="T:System.Web.Http.QueryableAttribute">
      <summary>Этот класс определяет атрибут, который можно применить к действию, чтобы включить использование в запросах синтаксис запросов OData.  Чтобы избежать обработки неожиданных или вредоносных запросов, используйте параметры проверки в <see cref="T:System.Web.Http.QueryableAttribute" />, чтобы проверять входящие запросы. Дополнительные сведения см. в разделе http://go.microsoft.com/fwlink/?LinkId=279712.</summary>
    </member>
    <member name="M:System.Web.Http.QueryableAttribute.#ctor">
      <summary>Включает действие контроллера для поддержки параметров запроса OData.</summary>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.AllowedArithmeticOperators">
      <summary>Получает или устанавливает перечисление, которое представляет список допустимых арифметических операторов, включая add, sub, mul, div, mod.</summary>
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.Query.AllowedArithmeticOperators" />.</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.AllowedFunctions">
      <summary>Получает или устанавливает перечисление, которое представляет список допустимых функций, используемых в запросе $filter. </summary>
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.Query.AllowedFunctions" />.</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.AllowedLogicalOperators">
      <summary>Получает или устанавливает перечисление, которое представляет список допустимых логических операторов, включая eq, ne, gt, ge, lt, le, and, or, not.</summary>
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.Query.AllowedLogicalOperators" />.</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.AllowedOrderByProperties">
      <summary>Получает или устанавливает строку со списком имен свойств, разделенных запятыми. Результат с поддержкой запросов может упорядочиваться только определенными в списке свойствами.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.AllowedQueryOptions">
      <summary>Получает или устанавливает параметры запроса, которые допускаются в запросе. По умолчанию ими являются все параметры запроса, включая $filter, $skip, $top, $orderby, $expand, $select, $inlineCount, $format и $skipToken.</summary>
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.Query.AllowedQueryOptions" />.</returns>
    </member>
    <member name="M:System.Web.Http.QueryableAttribute.ApplyQuery(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQueryOptions)">
      <summary>Применяет запрос к данному типу IQueryable на основе входящего запроса из идентификатора URI и настроек запроса.</summary>
      <returns>Возвращает значение <see cref="T:System.Linq.IQueryable" />.</returns>
      <param name="queryable">Стандартный экземпляр с поддержкой запросов из сообщения ответа.</param>
      <param name="queryOptions">Экземпляр &lt;see cref="T:System.Web.Http.OData.Query.ODataQueryOptions"/&gt; создается на основе входящего запроса.</param>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.EnableConstantParameterization">
      <summary>Получает или задает значение, указывающее, необходимо ли параметризировать константы. Для оптимальной производительности параметризации констант необходимо использовать инфраструктуру данных Entity Framework.</summary>
      <returns>По умолчанию используется значение true.</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.EnsureStableOrdering">
      <summary>Получает или задает значение, которое определяет, изменит ли построение запроса стандартный запрос при необходимости для обеспечения устойчивого порядка сортировки.</summary>
      <returns>Значение true указывает на то, что стандартный запрос будет изменен при необходимости для обеспечения устойчивого порядка сортировки. Значение false указывает, что порядок сортировки можно считать устойчивым без изменения запроса. Поставщики запросов, которые обеспечивают устойчивый порядок сортировки, должны задать значение false. По умолчанию используется значение true.</returns>
    </member>
    <member name="M:System.Web.Http.QueryableAttribute.GetModel(System.Type,System.Net.Http.HttpRequestMessage,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Получает модель EDM для данного типа и запроса.</summary>
      <returns>Модель EDM для данного типа и запроса.</returns>
      <param name="elementClrType">Тип CLR, для которого извлекается модель.</param>
      <param name="request">Сообщение запроса, для которого извлекается модель.</param>
      <param name="actionDescriptor">Дескриптор действий для запрашиваемого действия.</param>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.HandleNullPropagation">
      <summary>Получает или задает значение, указывающее, как должно обрабатываться распространение значения null при построении запроса.</summary>
      <returns>По умолчанию используется значение <see cref="F:System.Web.Http.OData.Query.HandleNullPropagationOption.Default" />.</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.MaxAnyAllExpressionDepth">
      <summary>Получает или устанавливает максимальную глубину встраивания элементов Any или All в запросе.</summary>
      <returns>Максимальная глубина встраивания элементов Any или All в запросе.</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.MaxNodeCount">
      <summary>Получает или задает максимальное число узлов в синтаксическом дереве HTTP.</summary>
      <returns>  Значение по умолчанию — 100.</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.MaxSkip">
      <summary>Получает или устанавливает максимальное значение параметра $skip, который может запрашиваться клиентом.</summary>
      <returns>Возвращает значение <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.MaxTop">
      <summary>Получает или устанавливает максимальное значение параметра $top, который может запрашиваться клиентом.</summary>
      <returns>Возвращает значение <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:System.Web.Http.QueryableAttribute.OnActionExecuted(System.Web.Http.Filters.HttpActionExecutedContext)">
      <summary>Выполняет построение запроса после выполнения действий. Сначала пытается использовать IQueryable из возвращенного сообщения ответа. Затем проверяет запрос из идентификатора URI, на основе параметров проверки атрибута QueryableAttribute. Наконец, применяет запрос должным образом и возвращает его в сообщение ответа.</summary>
      <param name="actionExecutedContext">Содержимое связано с этим действием, включая сообщение ответа, сообщение запроса, класс HttpConfiguration и др.</param>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.PageSize">
      <summary>Получает или устанавливает максимальное число результатов запросов для обратной отправки клиентам.</summary>
      <returns>  Максимальное число результатов запроса для обратной отправки клиентам.</returns>
    </member>
    <member name="M:System.Web.Http.QueryableAttribute.ValidateQuery(System.Net.Http.HttpRequestMessage,System.Web.Http.OData.Query.ODataQueryOptions)">
      <summary>Проверяет запросы OData во входящем запросе.</summary>
      <param name="request">Входящий запрос.</param>
      <param name="queryOptions">Экземпляр <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions" /> создан на основе входящего запроса.</param>
    </member>
    <member name="T:System.Web.Http.OData.AsyncEntitySetController`2">
      <summary>Предоставляет удобную начальную точку для контроллера, который предоставляет набор сущностей OData. Это синхронная версия <see cref="T:System.Web.Http.OData.AsyncEntitySetController" />.     </summary>
      <typeparam name="TEntity">Тип, связанный с предоставленным типом сущности набора сущностей.</typeparam>
      <typeparam name="TKey">Тип, связанный с ключом сущности предоставленного типа сущности набора сущностей.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.#ctor">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Web.Http.OData.AsyncEntitySetController`2" />. </summary>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.CreateEntityAsync(`0)">
      <summary>Чтобы создать новую сущность в наборе сущностей, следует переопределить этот метод.</summary>
      <returns>Созданная сущность.</returns>
      <param name="entity">Сущность, которую необходимо добавить в набор сущностей.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.CreateLink(`1,System.String,System.Uri)">
      <summary>Чтобы обработать запросы POST и PUT, которые предпринимают попытку создать связь между двумя сущностями, следует переопределить этот метод.</summary>
      <returns>Возвращает значение <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="key">Ключ сущности со свойством навигации.</param>
      <param name="navigationProperty">Имя свойства навигации.</param>
      <param name="link">Идентификатор URI сущности, на которую необходимо создать ссылку.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Delete(`1)">
      <summary>Чтобы обработать запросы DELETE для удаления существующих сущностей из набора сущностей, следует переопределить этот метод.</summary>
      <returns>Возвращает значение <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="key">Ключ сущности, которую необходимо удалить.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.DeleteLink(`1,System.String,System.String)">
      <summary>Чтобы обработать запросы DELETE, которые предпринимают попытку разорвать связь между двумя сущностями, следует переопределить этот метод.</summary>
      <returns>Возвращает значение <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="key">Ключ сущности со свойством навигации.</param>
      <param name="relatedKey">Ключ связанной записи.</param>
      <param name="navigationProperty">Имя свойства навигации.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.DeleteLink(`1,System.String,System.Uri)">
      <summary>  Чтобы обработать запросы DELETE, которые предпринимают попытку разорвать связь между двумя сущностями, следует переопределить этот метод.</summary>
      <returns>Возвращает значение <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="key">Ключ сущности со свойством навигации.</param>
      <param name="navigationProperty">Имя свойства навигации.</param>
      <param name="link">Идентификатор URI сущности, которую необходимо удалить из свойства навигации.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Get">
      <summary>Чтобы обработать запросы GET, которые предпринимают попытку получить сущности из набора сущностей, следует переопределить этот метод.          </summary>
      <returns>Соответствующие сущности из набора сущностей.</returns>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Get(`1)">
      <summary>Обрабатывает запросы GET, которые предпринимают попытку получить отдельную сущность с помощью ключа из набора сущностей.</summary>
      <returns>Сообщение ответа, которое необходимо отправить обратно клиенту.</returns>
      <param name="key">Ключ сущности, которую необходимо получить.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.GetEntityByKeyAsync(`1)">
      <summary>  Чтобы получить сущность с помощью ключа из набора сущностей, следует переопределить этот метод.</summary>
      <returns>Полученная сущность или значение null, если в наборе сущностей не была найдена сущность с указанным ключом.</returns>
      <param name="key">Ключ сущности, которую необходимо получить.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.GetKey(`0)">
      <summary>Чтобы получить ключ указанной сущности, следует переопределить этот метод.</summary>
      <returns>Значение ключа сущности.</returns>
      <param name="entity">Сущность.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.HandleUnmappedRequest(System.Web.Http.OData.Routing.ODataPath)">
      <summary>   Чтобы обработать все несопоставленные запросы OData, следует переопределить этот метод.</summary>
      <returns>Сообщение ответа, которое необходимо отправить обратно клиенту.</returns>
      <param name="odataPath">Путь OData запроса.</param>
    </member>
    <member name="P:System.Web.Http.OData.AsyncEntitySetController`2.ODataPath">
      <summary>Получает путь OData текущего запроса.</summary>
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.Routing.ODataPath" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Patch(`1,System.Web.Http.OData.Delta{`0})">
      <summary>Обрабатывает запросы PATCH и MERGE, чтобы частично обновить одну сущность в наборе сущностей.</summary>
      <returns>Сообщение ответа, которое необходимо отправить обратно клиенту.</returns>
      <param name="key">Ключ сущности, которую необходимо обновить.</param>
      <param name="patch">Исправление, представляющее частичное обновление.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.PatchEntityAsync(`1,System.Web.Http.OData.Delta{`0})">
      <summary>   Чтобы применить частичное обновление к существующей сущности в наборе сущностей, следует переопределить этот метод.</summary>
      <returns>Возвращает значение <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
      <param name="key">Ключ сущности, которую необходимо обновить.</param>
      <param name="patch">Исправление, представляющее частичное обновление.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Post(`0)">
      <summary>Обрабатывает запросы POST, которые создают новые сущности в наборе сущностей.</summary>
      <returns>Сообщение ответа, которое необходимо отправить обратно клиенту.</returns>
      <param name="entity">Сущность, которую необходимо вставить в набор сущностей.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Put(`1,`0)">
      <summary>  Обрабатывает запросы PUT, которые пытаются заменить одну сущность в наборе сущностей.</summary>
      <returns>Сообщение ответа, которое необходимо отправить обратно клиенту.</returns>
      <param name="key">Ключ сущности, которую необходимо заменить.</param>
      <param name="update">Обновленная сущность.</param>
    </member>
    <member name="P:System.Web.Http.OData.AsyncEntitySetController`2.QueryOptions">
      <summary>Получает параметры запроса OData текущего запроса.</summary>
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.UpdateEntityAsync(`1,`0)">
      <summary>Чтобы обновить существующую сущность в наборе сущностей, следует переопределить этот метод.</summary>
      <returns>Обновленная сущность.</returns>
      <param name="key">Ключ сущности, которую необходимо обновить.</param>
      <param name="update">Обновленная сущность.</param>
    </member>
    <member name="T:System.Web.Http.OData.ClrTypeAnnotation">
      <summary>Represents a mapping from an <see cref="T:Microsoft.Data.Edm.IEdmType" /> to a CLR type.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ClrTypeAnnotation.#ctor(System.Type)">
      <summary>Initializes a new instance of <see cref="T:System.Web.Http.OData.ClrTypeAnnotation" /> class.</summary>
      <param name="clrType">The backing CLR type for the EDM type.</param>
    </member>
    <member name="P:System.Web.Http.OData.ClrTypeAnnotation.ClrType">
      <summary>The backing CLR type for the EDM type.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Delta`1">
      <summary>Класс, отслеживающий изменения (Delta), для определенного типа сущности<paramref name="TEntityType" />.</summary>
      <typeparam name="TEntityType">Тип сущности TEntityType – базовый тип сущности, для которой класс Delta отслеживает изменения.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.#ctor">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Web.Http.OData.Delta`1" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Web.Http.OData.Delta`1" />.</summary>
      <param name="entityType">Производный тип сущности, для которого будут отслеживаться изменения. <paramref name="entityType" /> должен присваиваться экземплярам <paramref name="TEntityType" />.</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.Clear">
      <summary>Очищает Delta и сбрасывает базовую сущность.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.CopyChangedValues(`0)">
      <summary>Копирует измененные значения свойства из базовой сущности (доступной через <see cref="M:System.Web.Http.OData.Delta`1.GetEntity" /> для <paramref name="original" /> сущности.</summary>
      <param name="original">Сущность, которую необходимо обновить.</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.CopyUnchangedValues(`0)">
      <summary>Копирует неизмененные значения свойства из базовой сущности (доступной через <see cref="M:System.Web.Http.OData.Delta`1.GetEntity" /> для сущности <paramref name="original" />.</summary>
      <param name="original">Сущность, которую необходимо обновить.</param>
    </member>
    <member name="P:System.Web.Http.OData.Delta`1.EntityType">
      <summary>  Фактический тип сущности, для которой отслеживаются изменения.</summary>
      <returns>Возвращает значение <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.GetChangedPropertyNames">
      <summary>Возвращает свойства, которые были изменены с помощью этого класса Delta, как перечисление имен свойств.</summary>
      <returns>Возвращает значение <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.GetEntity">
      <summary>Возвращает <see cref="P:System.Web.Http.OData.Delta`1.EntityType" /> экземпляр, в котором содержатся все изменения (и исходные значения), отслеживаемый с помощью этого класса Delta.</summary>
      <returns>Возвращает значение <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.GetUnchangedPropertyNames">
      <summary>  Возвращает свойства, которые не были изменены с помощью этого класса Delta, как перечисление имен свойств.</summary>
      <returns>Возвращает значение <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.Patch(`0)">
      <summary>Перезаписывает исходную сущность <paramref name="original" /> с изменениями, которые были отслежены с помощью этого класса Delta. </summary>
      <param name="original">Сущность, которую необходимо обновить.</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.Put(`0)">
      <summary>Перезаписывает исходную сущность <paramref name="original" /> с значениями, которые были сохранены в этом классе Delta.</summary>
      <param name="original">Сущность, которую необходимо обновить.</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
      <summary>Переопределяет метод DynamicObject TryGetMember так, что можно получить только свойства <see cref="P:System.Web.Http.OData.Delta`1.EntityType" />.</summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.TryGetPropertyType(System.String,System.Type@)">
      <summary>Предпринимает попытку получить <see cref="T:System.Type" /> свойства, названного <paramref name="name" />, из базовой сущности.</summary>
      <returns>Значение true, если свойство найдено. В противном случае — значение false.</returns>
      <param name="name">Имя свойства.</param>
      <param name="type">Тип свойства.</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.TryGetPropertyValue(System.String,System.Object@)">
      <summary>Предпринимает попытку получить значение свойства, названного <paramref name="name" />, из базовой сущности.</summary>
      <returns>Значение true, если свойство найдено.</returns>
      <param name="name">Имя свойства.</param>
      <param name="value">Значение свойства.</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
      <summary>Переопределяет метод DynamicObject TryGetMember так, что можно установить только свойства <see cref="P:System.Web.Http.OData.Delta`1.EntityType" />.</summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.TrySetPropertyValue(System.String,System.Object)">
      <summary>  Предпринимает попытку присвоить свойству, названному <paramref name="name" />, указанное значение <paramref name="value" />.</summary>
      <returns>Значение true если операция выполнена успешно, в противном случае — false.</returns>
      <param name="name">Имя свойства.</param>
      <param name="value">Новое значение свойства.</param>
    </member>
    <member name="T:System.Web.Http.OData.EntityInstanceContext">
      <summary>Экземпляр <see cref="T:System.Web.Http.OData.EntityInstanceContext`1" /> переходит по ссылке на себя (<see cref="M:EntitySetConfiguration.HasIdLink" />, <see cref="M:EntitySetConfiguration.HasEditLink" />, <see cref="M:EntitySetConfiguration.HasReadLink" />) и к построителям ссылок навигации (<see cref="M:EntitySetConfiguration.HasNavigationPropertyLink" />, <see cref="M:EntitySetConfiguration.HasNavigationPropertiesLink" />), и может использоваться ими для генерации ссылок.</summary>
    </member>
    <member name="M:System.Web.Http.OData.EntityInstanceContext.#ctor"></member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.EdmModel">
      <summary>Возвращает <see cref="T:Microsoft.Data.Edm.IEdmModel" />.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.Data.Edm.IEdmModel" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.EntityInstance">
      <summary>Получает значение для экземпляра этой сущности.</summary>
      <returns>Возвращает значение <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.EntitySet">
      <summary>Получает <see cref="T:Microsoft.Data.Edm.IEdmEntitySet" />, которому принадлежит этот экземпляр.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.Data.Edm.IEdmEntitySet" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.EntityType">
      <summary>Получает <see cref="T:Microsoft.Data.Edm.IEdmEntityType" /> экземпляра этой сущности.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.Data.Edm.IEdmEntityType" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.Request">
      <returns>Возвращает значение <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.SkipExpensiveAvailabilityChecks">
      <summary>Получает необходимость выполнения проверок ActionAvailabilityCheck. Используется, чтобы указать модулю форматирования данных, необходимо ли проверять наличие действия, прежде чем вставить в него ссылку. Эта проверка пропускается, если действия находятся в веб-канале.</summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.Url">
      <returns>Возвращает значение <see cref="T:System.Web.Http.Routing.UrlHelper" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.EntityInstanceContext`1">
      <summary>Экземпляр <see cref="T:System.Web.Http.OData.EntityInstanceContext`1" /> переходит по ссылке на себя (<see cref="M:EntitySetConfiguration.HasIdLink" />, <see cref="M:EntitySetConfiguration.HasEditLink" />, <see cref="M:EntitySetConfiguration.HasReadLink" />) и к построителям ссылок навигации (<see cref="M:EntitySetConfiguration.HasNavigationPropertyLink" />, <see cref="M:EntitySetConfiguration.HasNavigationPropertiesLink" />), и может использоваться ими для генерации ссылок.</summary>
      <typeparam name="TEntityType">Тип сущности</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.EntityInstanceContext`1.#ctor"></member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext`1.EntityInstance"></member>
    <member name="T:System.Web.Http.OData.EntitySetController`2">
      <summary>Предоставляет удобную начальную точку для контроллера, который предоставляет набор сущностей OData. Это синхронная версия <see cref="T:System.Web.Http.OData.AsyncEntitySetController`2" />.</summary>
      <typeparam name="TEntity">Тип, связанный с предоставленным типом сущности набора сущностей.</typeparam>
      <typeparam name="TKey">Тип, связанный с ключом сущности предоставленного типа сущности набора сущностей.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.#ctor"></member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.CreateEntity(`0)">
      <summary>  Чтобы создать новую сущность в наборе сущностей, следует переопределить этот метод.</summary>
      <returns>Созданная сущность.</returns>
      <param name="entity">Сущность, которую необходимо добавить в набор сущностей.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.CreateLink(`1,System.String,System.Uri)">
      <summary>Чтобы обработать запросы POST и PUT, которые предпринимают попытку создать связь между двумя сущностями, следует переопределить этот метод.</summary>
      <param name="key">Ключ сущности со свойством навигации.</param>
      <param name="navigationProperty">Имя свойства навигации.</param>
      <param name="link">Идентификатор URI сущности, на которую необходимо создать ссылку.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.Delete(`1)">
      <summary>   Чтобы обработать запросы DELETE для удаления существующих сущностей из набора сущностей, следует переопределить этот метод.</summary>
      <param name="key">Ключ сущности, которую необходимо удалить.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.DeleteLink(`1,System.String,System.String)">
      <summary>Чтобы обработать запросы DELETE, которые предпринимают попытку разорвать связь между двумя сущностями, следует переопределить этот метод.</summary>
      <param name="key">Ключ сущности со свойством навигации.</param>
      <param name="relatedKey">Ключ связанной записи.</param>
      <param name="navigationProperty">Имя свойства навигации.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.DeleteLink(`1,System.String,System.Uri)">
      <summary>  Чтобы обработать запросы DELETE, которые предпринимают попытку разорвать связь между двумя сущностями, следует переопределить этот метод.</summary>
      <param name="key">Ключ сущности со свойством навигации.</param>
      <param name="navigationProperty">Имя свойства навигации.</param>
      <param name="link">Идентификатор URI сущности, которую необходимо удалить из свойства навигации.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.Get">
      <summary>Чтобы обработать запросы GET, которые предпринимают попытку получить сущности из набора сущностей, следует переопределить этот метод.</summary>
      <returns>Соответствующие сущности из набора сущностей.</returns>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.Get(`1)">
      <summary>Обрабатывает запросы GET, которые предпринимают попытку получить отдельную сущность с помощью ключа из набора сущностей.</summary>
      <returns>Сообщение ответа, которое необходимо отправить обратно клиенту.</returns>
      <param name="key">Ключ сущности, которую необходимо получить.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.GetEntityByKey(`1)">
      <summary>Чтобы получить сущность с помощью ключа из набора сущностей, следует переопределить этот метод.</summary>
      <returns>Полученная сущность или значение null, если в наборе сущностей не была найдена сущность с указанным ключом.</returns>
      <param name="key">Ключ сущности, которую необходимо получить.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.GetKey(`0)">
      <summary>Чтобы получить ключ указанной сущности, следует переопределить этот метод.</summary>
      <returns>Значение ключа сущности.</returns>
      <param name="entity">Сущность.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.HandleUnmappedRequest(System.Web.Http.OData.Routing.ODataPath)">
      <summary>Чтобы обработать все несопоставленные запросы OData, следует переопределить этот метод.</summary>
      <returns>Сообщение ответа, которое необходимо отправить обратно клиенту.</returns>
      <param name="odataPath">Путь OData запроса.</param>
    </member>
    <member name="P:System.Web.Http.OData.EntitySetController`2.ODataPath">
      <summary>Получает путь OData текущего запроса.</summary>
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.Routing.ODataPath" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.Patch(`1,System.Web.Http.OData.Delta{`0})">
      <summary>   Обрабатывает запросы PATCH и MERGE, чтобы частично обновить одну сущность в наборе сущностей.</summary>
      <returns>Сообщение ответа, которое необходимо отправить обратно клиенту.</returns>
      <param name="key">Ключ сущности, которую необходимо обновить.</param>
      <param name="patch">Исправление, представляющее частичное обновление.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.PatchEntity(`1,System.Web.Http.OData.Delta{`0})">
      <summary>   Чтобы применить частичное обновление к существующей сущности в наборе сущностей, следует переопределить этот метод.</summary>
      <returns>Обновленная сущность.</returns>
      <param name="key">Ключ сущности, которую необходимо обновить.</param>
      <param name="patch">Исправление, представляющее частичное обновление.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.Post(`0)">
      <summary>Обрабатывает запросы POST, которые создают новые сущности в наборе сущностей.</summary>
      <returns>Сообщение ответа, которое необходимо отправить обратно клиенту.</returns>
      <param name="entity">Сущность, которую необходимо вставить в набор сущностей.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.Put(`1,`0)">
      <summary>Обрабатывает запросы PUT, которые пытаются заменить одну сущность в наборе сущностей.</summary>
      <returns>Сообщение ответа, которое необходимо отправить обратно клиенту.</returns>
      <param name="key">Ключ сущности, которую необходимо заменить.</param>
      <param name="update">Обновленная сущность.</param>
    </member>
    <member name="P:System.Web.Http.OData.EntitySetController`2.QueryOptions">
      <summary>  Получает параметры запроса OData текущего запроса.</summary>
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.UpdateEntity(`1,`0)">
      <summary>   Чтобы обновить существующую сущность в наборе сущностей, следует переопределить этот метод.</summary>
      <returns>Обновленная сущность.</returns>
      <param name="key">Ключ сущности, которую необходимо обновить.</param>
      <param name="update">Обновленная сущность.</param>
    </member>
    <member name="T:System.Web.Http.OData.FeedContext">
      <summary>Содержит контекстную информацию о веб-канале, который в настоящее время сериализируется.</summary>
    </member>
    <member name="M:System.Web.Http.OData.FeedContext.#ctor"></member>
    <member name="P:System.Web.Http.OData.FeedContext.EntitySet">
      <summary>Получает <see cref="T:Microsoft.Data.Edm.IEdmEntitySet" />, которому принадлежит этот экземпляр.</summary>
    </member>
    <member name="P:System.Web.Http.OData.FeedContext.FeedInstance">
      <summary>Получает значение экземпляра этого веб-канала.</summary>
    </member>
    <member name="P:System.Web.Http.OData.FeedContext.Request"></member>
    <member name="P:System.Web.Http.OData.FeedContext.Url"></member>
    <member name="T:System.Web.Http.OData.FromODataUriAttribute">
      <summary>Реализация <see cref="T:System.Web.Http.ParameterBindingAttribute" />, который может привязать параметры идентификатора URI, используя соглашения OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.FromODataUriAttribute.#ctor"></member>
    <member name="M:System.Web.Http.OData.FromODataUriAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Получает привязку для параметра.</summary>
      <returns>
        <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" />, содержащий привязку.</returns>
      <param name="parameter">Связываемый параметр.</param>
    </member>
    <member name="T:System.Web.Http.OData.IDelta">
      <summary>Разрешает и отслеживает изменения в объекте.</summary>
    </member>
    <member name="M:System.Web.Http.OData.IDelta.Clear">
      <summary>Очищает <see cref="T:System.Web.Http.OData.IDelta" /> .</summary>
    </member>
    <member name="M:System.Web.Http.OData.IDelta.GetChangedPropertyNames">
      <summary>Возвращает свойства, которые были изменены с помощью этого класса IDelta, как перечисление имен свойств.</summary>
      <returns>Возвращает значение <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.IDelta.GetUnchangedPropertyNames">
      <summary>Возвращает свойства, которые не были изменены с помощью этого класса IDelta, как перечисление имен свойств.</summary>
      <returns>Возвращает значение <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.IDelta.TryGetPropertyType(System.String,System.Type@)">
      <summary>Предпринимает попытку получить <see cref="T:System.Type" /> свойства, названного <paramref name="name" />, из базовой сущности.</summary>
      <returns>Возвращает значение true, если свойство было найдено, и значение false, если нет.</returns>
      <param name="name">Имя свойства</param>
      <param name="type">Тип свойства</param>
    </member>
    <member name="M:System.Web.Http.OData.IDelta.TryGetPropertyValue(System.String,System.Object@)">
      <summary>Предпринимает попытку получить значение свойства, названного <paramref name="name" />, из базовой сущности.</summary>
      <returns>Возвращает значение true, если свойство было найдено, и значение false, если нет.</returns>
      <param name="name">Имя свойства</param>
      <param name="value">Значение свойства</param>
    </member>
    <member name="M:System.Web.Http.OData.IDelta.TrySetPropertyValue(System.String,System.Object)">
      <summary>Предпринимает попытку присвоить свойству, названному <paramref name="name" />, указанное значение <paramref name="value" />.</summary>
      <returns>Возвращает значение true, если операция выполнена успешно и значение false, если нет.</returns>
      <param name="name">Имя свойства</param>
      <param name="value">Новое значение свойства</param>
    </member>
    <member name="T:System.Web.Http.OData.ODataActionParameters">
      <summary>Класс ActionPayload содержит имена и значения параметра, предоставленного клиентом в запросе POST, чтобы вызвать определенное действие. Значения параметра сохраняются в словаре, который индексируется с помощью имени параметра.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataActionParameters.#ctor"></member>
    <member name="T:System.Web.Http.OData.ODataController">
      <summary>Определяет базовый класс контроллеров OData, которые поддерживают запись и чтение данных, используя форматы OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataController.#ctor"></member>
    <member name="T:System.Web.Http.OData.ODataFormattingAttribute">
      <summary>     Атрибут необходимо разместить в контроллерах, которые включают модули форматирования OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataFormattingAttribute.#ctor"></member>
    <member name="M:System.Web.Http.OData.ODataFormattingAttribute.Initialize(System.Web.Http.Controllers.HttpControllerSettings,System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>Обратный вызов, задающий переопределения для конкретного контроллера в этом controllerDescriptor.</summary>
      <param name="controllerSettings">Параметры контроллера для инициализации.</param>
      <param name="controllerDescriptor">Дескриптор контроллера. Обратите внимание, что <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> может быть связан с контроллером производного типа, учитывая, что <see cref="T:System.Web.Http.Controllers.IControllerConfiguration" /> наследуется.</param>
    </member>
    <member name="T:System.Web.Http.OData.ODataMetadataController">
      <summary>Represents an <see cref="T:System.Web.Http.ApiController" /> for generating OData servicedoc and metadata document ($metadata).</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataMetadataController.#ctor"></member>
    <member name="M:System.Web.Http.OData.ODataMetadataController.GetMetadata">
      <summary>Generates the OData $metadata document.</summary>
      <returns>The <see cref="T:Microsoft.Data.Edm.IEdmModel" /> representing $metadata.</returns>
    </member>
    <member name="M:System.Web.Http.OData.ODataMetadataController.GetServiceDocument">
      <summary>Generates the OData service document.</summary>
      <returns>The service document for the service.</returns>
    </member>
    <member name="T:System.Web.Http.OData.ODataQueryContext">
      <summary>Определяет некоторую контекстную информацию, используемую для выполнения построения запроса.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataQueryContext.#ctor(Microsoft.Data.Edm.IEdmModel,System.Type)">
      <summary>  Составляет экземпляр <see cref="T:System.Web.Http.OData.ODataQueryContext" /> вместе с <see cref="T:Microsoft.Data.Edm.IEdmModel" /> и типом CLR элемента.</summary>
      <param name="model">Модель EdmModel, которая включает <see cref="T:Microsoft.Data.Edm.IEdmType" />, соответствующий данному <paramref name="elementClrType" />.</param>
      <param name="elementClrType">Тип CLR элемента запрашиваемой коллекции.</param>
    </member>
    <member name="P:System.Web.Http.OData.ODataQueryContext.ElementClrType">
      <summary>Получает тип CLR элемента.</summary>
      <returns>Возвращает значение <see cref="T:System.Type" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.ODataQueryContext.ElementType">
      <summary>   Получает тип <see cref="T:Microsoft.Data.Edm.IEdmType" /> элемента.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.Data.Edm.IEdmType" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.ODataQueryContext.Model">
      <summary>Получает данный <see cref="T:Microsoft.Data.Edm.IEdmModel" />, который содержит набор сущностей EntitySet.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.Data.Edm.IEdmModel" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.ODataQueryParameterBindingAttribute">
      <summary>A <see cref="T:System.Web.Http.ParameterBindingAttribute" /> to bind parameters of type <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions" /> to the OData query from the incoming request.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataQueryParameterBindingAttribute.#ctor"></member>
    <member name="M:System.Web.Http.OData.ODataQueryParameterBindingAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)"></member>
    <member name="T:System.Web.Http.OData.ODataRoutingAttribute">
      <summary>Определяет атрибут уровня контроллера, который можно использовать, чтобы включить выбор действия OData, на основе соглашений маршрутизации.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataRoutingAttribute.#ctor"></member>
    <member name="M:System.Web.Http.OData.ODataRoutingAttribute.Initialize(System.Web.Http.Controllers.HttpControllerSettings,System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>  Обратный вызов, задающий переопределения для конкретного контроллера в этом controllerDescriptor.</summary>
      <param name="controllerSettings">Параметры контроллера для инициализации.</param>
      <param name="controllerDescriptor">Дескриптор контроллера. Обратите внимание, что <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> может быть связан с контроллером производного типа, учитывая, что <see cref="T:System.Web.Http.Controllers.IControllerConfiguration" /> наследуется.</param>
    </member>
    <member name="T:System.Web.Http.OData.PageResult">
      <summary>Represents a feed of entities that includes additional information that OData formats support.</summary>
    </member>
    <member name="M:System.Web.Http.OData.PageResult.#ctor(System.Uri,System.Nullable{System.Int64})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.PageResult" /> class.</summary>
      <param name="nextPageLink">The link for the next page of items in the feed.</param>
      <param name="count">The total count of items in the feed.</param>
    </member>
    <member name="P:System.Web.Http.OData.PageResult.Count">
      <summary>Gets the total count of items in the feed.</summary>
      <returns>Returns <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.PageResult.NextPageLink">
      <summary>Gets the link for the next page of items in the feed.</summary>
      <returns>Returns <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.PageResult`1">
      <summary>PageResult – это канал сущностей, которые содержат дополнительные сведения, поддерживаемые форматами OData. В настоящее время ограничен до: число всех соответствующих сущностей на сервере (запрос на которые создан с помощью $inlinecount=allpages); NextLink для получения следующей страницы результатов (добавляется, если сервер инициирует разбиение на страницы на сервере).</summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.PageResult`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Uri,System.Nullable{System.Int64})">
      <summary>Создает частичный набор результатов, используемый в случае включенного разбиения на страницы на сервере.</summary>
      <param name="items">Подмножество соответствующих результатов, которые следует сериализировать на этой странице.</param>
      <param name="nextPageLink">Ссылка на следующую страницу соответствующих результатов (если их больше)</param>
      <param name="count">Общее число соответствующих результатов, чтобы клиенты могли узнать количество совпадений на сервере.</param>
    </member>
    <member name="M:System.Web.Http.OData.PageResult`1.GetEnumerator">
      <returns>Возвращает значение <see cref="T:System.Collections.Generic.IEnumerator`1" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.PageResult`1.Items">
      <returns>Возвращает значение <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.PageResult`1.System#Collections#IEnumerable#GetEnumerator">
      <returns>Возвращает значение <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ActionConfiguration">
      <summary> ActionConfiguration представляет действие OData, которое нужно предоставить через вашу службу.   ActionConfigurations предоставляются через $metadata как элемент &lt;FunctionImport /&gt;.   </summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.AddParameter(System.String,System.Web.Http.OData.Builder.IEdmTypeConfiguration)">
      <summary> Добавляет новый параметр без привязки. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ActionConfiguration.BindingParameter">
      <summary> Получение bindingParameter.   Значение Null значит, что действие не имеет bindingParameter.  </summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.CollectionParameter``1(System.String)">
      <summary> Добавляет новый параметр коллекции без привязки. </summary>
      <typeparam name="TElementType"></typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ActionConfiguration.FollowsConventions"></member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.GetActionLink">
      <summary> Извлекает зарегистрированную фабрику ссылок действия. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.HasActionLink(System.Func{System.Web.Http.OData.EntityInstanceContext,System.Uri},System.Boolean)"></member>
    <member name="P:System.Web.Http.OData.Builder.ActionConfiguration.IsAlwaysBindable">
      <summary> Всегда ли можно привязать это действие. Например, представьте действие «Просмотр», которое можно привязать к фильму: не всегда можно просмотреть фильм, поэтому IsAlwaysBindable возвратит значение false. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ActionConfiguration.IsBindable"></member>
    <member name="P:System.Web.Http.OData.Builder.ActionConfiguration.Kind"></member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.Parameter``1(System.String)">
      <summary> Добавляет новый параметр без привязки </summary>
      <typeparam name="TParameter"></typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ActionConfiguration.Parameters"></member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.Returns``1">
      <summary> Заданный возвращаемый тип действия.  Используется если возвращаемый тип – это единичный тип Primitive или ComplexType.  </summary>
      <typeparam name="TReturnType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.ReturnsCollection``1">
      <summary> Задает возвращаемый тип действия. Используется если возвращаемый тип – это коллекция типов Primitive или ComplexType.  </summary>
      <typeparam name="TReturnElementType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.ReturnsCollectionFromEntitySet``1(System.String)">
      <summary> Задает возвращаемый тип для коллекции экземпляров EntityType. </summary>
      <param name="entitySetName">Класс entitySetName, содержащий возвращаемое значение экземпляров EntityType</param>
      <typeparam name="TElementEntityType">Тип, являющийся EntityType</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.ReturnsFromEntitySet``1(System.String)">
      <summary> Задает возвращаемый тип как единичный экземпляр EntityType. </summary>
      <param name="entitySetName">Класс entitySetName, содержащий возвращаемое значение экземпляра EntityType</param>
      <typeparam name="TEntityType">Тип, являющийся EntityType</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.SetBindingParameter(System.String,System.Web.Http.OData.Builder.IEdmTypeConfiguration,System.Boolean)">
      <summary> Указывает имя и тип bindingParameter. Если он имеет значение alwaysBindable, используется при условии, что действие имеет параметр isBindable. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ActionLinkBuilder">
      <summary> ActionLinkBuilder можно использовать для добавления примечаний к действию.  Так модули форматирования создают ссылки для вызова привязанных действий. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionLinkBuilder.#ctor(System.Func{System.Web.Http.OData.EntityInstanceContext,System.Uri},System.Boolean)"></member>
    <member name="M:System.Web.Http.OData.Builder.ActionLinkBuilder.BuildActionLink(System.Web.Http.OData.EntityInstanceContext)"></member>
    <member name="M:System.Web.Http.OData.Builder.ActionLinkBuilder.CreateActionLinkFactory(System.Func{System.Web.Http.OData.EntityInstanceContext,System.Uri},System.Func{System.Web.Http.OData.EntityInstanceContext,System.Boolean})">
      <summary> Создает фабрику ссылок действий, создающую ссылку действия, на основе expensiveAvailabilityCheck, но только при необходимости или если нужно произвести затратные проверки. Это можно определить по свойству EntityInstanceContext.SkipExpensiveActionAvailabilityChecks. </summary>
      <returns>Новая фабрика ссылок действий.</returns>
      <param name="baseFactory">Фабрика ссылок действий, действительно создающая ссылки, если пройдены все проверки.</param>
      <param name="expensiveAvailabilityCheck">Функция проверки доступности затратна, но если ее вызвать, она возвращается при условии доступности действия.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ActionLinkBuilder.FollowsConventions"></member>
    <member name="T:System.Web.Http.OData.Builder.BindingParameterConfiguration">
      <summary> Представляет параметр BindingParameter.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.BindingParameterConfiguration.#ctor(System.String,System.Web.Http.OData.Builder.IEdmTypeConfiguration,System.Boolean)">
      <summary> Создание BindingParameterConfiguration </summary>
      <param name="name">Имя параметра привязки</param>
      <param name="parameterType">Тип параметра привязки</param>
      <param name="alwaysBindable">Всегда ли можно связать действие с экземплярами параметра привязки.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.BindingParameterConfiguration.AlwaysBindable">
      <summary> Указывает, всегда ли параметр BindingParameter привязываемый или нет. Например, некоторые действия доступны всегда, а некоторые – только в определенное время или при определенных обстоятельствах. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Builder.BindingParameterConfiguration.DefaultBindingParameterName"></member>
    <member name="T:System.Web.Http.OData.Builder.CollectionPropertyConfiguration">
      <summary>CollectionPropertyConfiguration представляет свойство CollectionProperty для EntityType или ComplexType.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.#ctor(System.Reflection.PropertyInfo,System.Web.Http.OData.Builder.StructuralTypeConfiguration)">
      <summary>Создает CollectionPropertyConfiguration с помощью предоставляемого свойства <paramref name="property" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.ElementType">
      <summary>Возвращает тип элементов коллекции</summary>
      <returns>Возвращает значение <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.IsOptional">
      <summary>Устанавливает для CollectionProperty необязательное значение (т.е. допускающее значение null).</summary>
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.Builder.CollectionPropertyConfiguration" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.IsRequired">
      <summary>Устанавливает для CollectionProperty обязательное значение (т.е. не допускающее значение null).</summary>
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.Builder.CollectionPropertyConfiguration" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.Kind">
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.Builder.PropertyKind" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.RelatedClrType">
      <returns>Возвращает значение <see cref="T:System.Type" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.CollectionTypeConfiguration">
      <summary>Представляет коллекцию некоторого именованного типа, например Collection(Namespace.Customer) или Collection(Namespace.Address).</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.CollectionTypeConfiguration.#ctor(System.Web.Http.OData.Builder.IEdmTypeConfiguration,System.Type)">
      <summary>Создание коллекции, содержащей элементы указанного ElementType и представленной в .NET с помощью указанного типа clrType</summary>
      <param name="elementType">Класс EdmTypeConfiguration элементов в коллекции</param>
      <param name="clrType">Тип этой коллекции при манифестировании в .NET</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.ClrType">
      <returns>Возвращает значение <see cref="T:System.Type" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.ElementType">
      <summary>Класс EdmTypeConfiguration элементов в этой коллекции</summary>
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.Builder.IEdmTypeConfiguration" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.FullName">
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.Kind">
      <returns>Возвращает значение <see cref="T:Microsoft.Data.Edm.EdmTypeKind" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.ModelBuilder">
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.Name">
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.Namespace">
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ComplexPropertyConfiguration"></member>
    <member name="M:System.Web.Http.OData.Builder.ComplexPropertyConfiguration.#ctor(System.Reflection.PropertyInfo,System.Web.Http.OData.Builder.StructuralTypeConfiguration)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Builder.ComplexPropertyConfiguration" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ComplexPropertyConfiguration.IsOptional"></member>
    <member name="M:System.Web.Http.OData.Builder.ComplexPropertyConfiguration.IsRequired"></member>
    <member name="P:System.Web.Http.OData.Builder.ComplexPropertyConfiguration.Kind"></member>
    <member name="P:System.Web.Http.OData.Builder.ComplexPropertyConfiguration.RelatedClrType"></member>
    <member name="T:System.Web.Http.OData.Builder.ComplexTypeConfiguration">
      <summary>Позволяет выполнить конфигурацию для сложного типа в модели. ComplexTypeConfiguration можно получить с помощью метода <see cref="M:System.Web.Http.OData.Builder.ODataModelBuilder.ComplexType``1" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ComplexTypeConfiguration.#ctor"></member>
    <member name="M:System.Web.Http.OData.Builder.ComplexTypeConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,System.Type)"></member>
    <member name="P:System.Web.Http.OData.Builder.ComplexTypeConfiguration.Kind"></member>
    <member name="T:System.Web.Http.OData.Builder.ComplexTypeConfiguration`1">
      <summary>Represents an <see cref="T:Microsoft.Data.Edm.IEdmComplexType" /> that can be built using <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</summary>
      <typeparam name="TComplexType"></typeparam>
    </member>
    <member name="T:System.Web.Http.OData.Builder.EntityCollectionConfiguration`1">
      <summary>EntityCollectionConfiguration представляет коллекцию объектов. Этот класс можно использовать для конфигурации элементов, связанных с сущностями, например как действия привязаны к коллекции.</summary>
      <typeparam name="TEntityType">EntityType, являющееся ElementType для EntityCollection</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityCollectionConfiguration`1.Action(System.String)">
      <summary>Создает новое действие, привязываемое к Collection(EntityType).</summary>
      <returns>ActionConfiguration для разрешения дополнительных настроек действия.</returns>
      <param name="name">Имя действия.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityCollectionConfiguration`1.TransientAction(System.String)">
      <summary>Создает новое действие, не всегда привязываемое к Collection(EntityType).</summary>
      <returns>ActionConfiguration для разрешения дополнительных настроек действия.</returns>
      <param name="name">Имя действия.</param>
    </member>
    <member name="T:System.Web.Http.OData.Builder.EntitySetConfiguration">
      <summary>Позволяет выполнить конфигурацию для набора объектов модели. <see cref="T:System.Web.Http.OData.Builder.EntitySetConfiguration" /> можно получить с помощью метода <see cref="M:System.Web.Http.OData.Builder.ODataModelBuilder.EntitySet``1(System.String)" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.#ctor"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,System.Type,System.String)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,System.Web.Http.OData.Builder.EntityTypeConfiguration,System.String)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.AddBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Web.Http.OData.Builder.EntitySetConfiguration)">
      <summary>Привязывает указанное свойство навигации к целевому набору сущностей.</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyBinding" />, чтобы его можно было настроить позже.</returns>
      <param name="navigationConfiguration">Свойство навигации.</param>
      <param name="targetEntitySet">Целевой набор сущностей.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntitySetConfiguration.Bindings">
      <summary>Получает цели навигации этого набора сущностей.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntitySetConfiguration.ClrType">
      <summary>Получает резервный тип clr для типа сущности, содержащейся в этом наборе сущностей.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntitySetConfiguration.EntityType">
      <summary>Получает тип сущности, содержащейся в этом наборе сущностей.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.FindBinding(System.String)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.FindBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.FindBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Boolean)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetEditLink">
      <summary>Получает конструктор, используемый для создания ссылки правки для записей из этого набора сущностей.</summary>
      <returns>Конструктор ссылок.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetFeedSelfLink">
      <summary>Получает конструктор, используемый для генерации ссылки на себя для каналов для этого набора сущностей.</summary>
      <returns>Конструктор ссылок.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetIdLink">
      <summary>Получает конструктор, используемый для создания идентификатора для записей из этого набора сущностей.</summary>
      <returns>Конструктор.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetNavigationPropertyLink(System.Web.Http.OData.Builder.NavigationPropertyConfiguration)">
      <summary>Получает конструктор, используемый для создания ссылки навигации для указанного свойства навигации из этого набора сущностей.</summary>
      <returns>Конструктор ссылок.</returns>
      <param name="navigationProperty">Свойство навигации.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetReadLink">
      <summary>Получает конструктор, используемый для создания ссылки чтения для записей из этого набора сущностей.</summary>
      <returns>Конструктор ссылок.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetUrl"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasEditLink(System.Web.Http.OData.Builder.SelfLinkBuilder{System.Uri})"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasFeedSelfLink(System.Func{System.Web.Http.OData.FeedContext,System.Uri})">
      <summary>Добавляет ссылку на себя в канал.</summary>
      <returns>Конфигурация набора сущностей, настраиваемых в настоящее время.</returns>
      <param name="feedSelfLinkFactory">Конструктор, используемый для генерации URL-адреса ссылки.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasIdLink(System.Web.Http.OData.Builder.SelfLinkBuilder{System.String})"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasNavigationPropertiesLink(System.Collections.Generic.IEnumerable{System.Web.Http.OData.Builder.NavigationPropertyConfiguration},System.Web.Http.OData.Builder.NavigationLinkBuilder)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasNavigationPropertyLink(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Web.Http.OData.Builder.NavigationLinkBuilder)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasReadLink(System.Web.Http.OData.Builder.SelfLinkBuilder{System.Uri})"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasUrl(System.String)">
      <summary>Настраивает URL-адрес набора сущностей.</summary>
      <returns>Возвращает себя, поэтому несколько вызовов можно объединить в цепочку.</returns>
      <param name="url">URL-адрес набора сущностей.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntitySetConfiguration.Name">
      <summary>Получает имя этого набора сущностей.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.RemoveBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration)">
      <summary>Удаляет привязку для указанного свойства навигации.</summary>
      <param name="navigationConfiguration">Свойство навигации</param>
    </member>
    <member name="T:System.Web.Http.OData.Builder.EntitySetConfiguration`1">
      <typeparam name="TEntityType"></typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntitySetConfiguration`1.EntityType"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.FindBinding(System.String)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.FindBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.FindBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Boolean)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasEditLink(System.Func{System.Web.Http.OData.EntityInstanceContext{`0},System.String},System.Boolean)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasEditLink(System.Func{System.Web.Http.OData.EntityInstanceContext{`0},System.Uri},System.Boolean)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasFeedSelfLink(System.Func{System.Web.Http.OData.FeedContext,System.String})">
      <summary> Добавляет ссылку на себя в канал. </summary>
      <param name="feedSelfLinkFactory">Конструктор, используемый для генерации URL-адреса ссылки.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasFeedSelfLink(System.Func{System.Web.Http.OData.FeedContext,System.Uri})">
      <summary> Добавляет ссылку на себя в канал. </summary>
      <param name="feedSelfLinkFactory">Конструктор, используемый для генерации URL-адреса ссылки.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasIdLink(System.Func{System.Web.Http.OData.EntityInstanceContext{`0},System.String},System.Boolean)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasManyBinding``2(System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0}}},System.String)">
      <typeparam name="TTargetType"></typeparam>
      <typeparam name="TDerivedEntityType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasManyBinding``2(System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0}}},System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <typeparam name="TTargetType"></typeparam>
      <typeparam name="TDerivedEntityType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasManyBinding``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.String)">
      <typeparam name="TTargetType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasManyBinding``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <typeparam name="TTargetType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasNavigationPropertiesLink(System.Collections.Generic.IEnumerable{System.Web.Http.OData.Builder.NavigationPropertyConfiguration},System.Func{System.Web.Http.OData.EntityInstanceContext{`0},Microsoft.Data.Edm.IEdmNavigationProperty,System.Uri},System.Boolean)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasNavigationPropertyLink(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Func{System.Web.Http.OData.EntityInstanceContext{`0},Microsoft.Data.Edm.IEdmNavigationProperty,System.Uri},System.Boolean)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasOptionalBinding``2(System.Linq.Expressions.Expression{System.Func{``1,``0}},System.String)">
      <typeparam name="TTargetType"></typeparam>
      <typeparam name="TDerivedEntityType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasOptionalBinding``2(System.Linq.Expressions.Expression{System.Func{``1,``0}},System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <typeparam name="TTargetType"></typeparam>
      <typeparam name="TDerivedEntityType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasOptionalBinding``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
      <typeparam name="TTargetType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasOptionalBinding``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <typeparam name="TTargetType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasReadLink(System.Func{System.Web.Http.OData.EntityInstanceContext{`0},System.String},System.Boolean)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasReadLink(System.Func{System.Web.Http.OData.EntityInstanceContext{`0},System.Uri},System.Boolean)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasRequiredBinding``2(System.Linq.Expressions.Expression{System.Func{``1,``0}},System.String)">
      <typeparam name="TTargetType"></typeparam>
      <typeparam name="TDerivedEntityType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasRequiredBinding``2(System.Linq.Expressions.Expression{System.Func{``1,``0}},System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <typeparam name="TTargetType"></typeparam>
      <typeparam name="TDerivedEntityType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasRequiredBinding``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
      <typeparam name="TTargetType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasRequiredBinding``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <typeparam name="TTargetType"></typeparam>
    </member>
    <member name="T:System.Web.Http.OData.Builder.EntityTypeConfiguration">
      <summary>Представляет <see cref="T:Microsoft.Data.Edm.IEdmEntityType" />, который можно создать с помощью <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" /> .</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.#ctor"></member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,System.Type)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.Abstract">
      <summary>Помечает этот тип сущностей как абстрактный.</summary>
      <returns>Возвращает себя, поэтому несколько вызовов можно объединить в цепочку.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.AddCollectionProperty(System.Reflection.PropertyInfo)">
      <summary>Добавляет свойство коллекции EDM в этот тип сущностей.</summary>
      <returns>Возвращает <see cref="T:System.Web.Http.OData.Builder.CollectionPropertyConfiguration" /> добавленного свойства.</returns>
      <param name="propertyInfo">Резервное свойство CLR.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.AddComplexProperty(System.Reflection.PropertyInfo)">
      <summary>Добавляет сложное свойство EDM в этот тип сущностей.</summary>
      <returns>Возвращает <see cref="T:System.Web.Http.OData.Builder.ComplexPropertyConfiguration" /> добавленного свойства.</returns>
      <param name="propertyInfo">Резервное свойство CLR.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.AddNavigationProperty(System.Reflection.PropertyInfo,Microsoft.Data.Edm.EdmMultiplicity)">
      <summary>Добавляет новое свойство навигации EDM в этот тип сущностей.</summary>
      <returns>Возвращает <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyConfiguration" /> добавленного свойства.</returns>
      <param name="navigationProperty">Резервное свойство CLR.</param>
      <param name="multiplicity">
        <see cref="T:Microsoft.Data.Edm.EdmMultiplicity" /> свойства навигации.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.AddProperty(System.Reflection.PropertyInfo)">
      <summary>Добавляет новое простое свойство EDM в этот тип сущностей.</summary>
      <returns>Возвращает <see cref="T:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration" /> добавленного свойства.</returns>
      <param name="propertyInfo">Резервное свойство CLR.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.BaseType">
      <summary>Получает или задает базовый тип этого типа сущностей.</summary>
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.Builder.EntityTypeConfiguration" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.BaseTypeConfigured">
      <returns>Возвращает значение <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.DerivesFrom(System.Web.Http.OData.Builder.EntityTypeConfiguration)">
      <summary>Задает базовый тип этого типа сущностей.</summary>
      <returns>Возвращает себя, поэтому несколько вызовов можно объединить в цепочку.</returns>
      <param name="baseType">Базовый тип сущностей.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.DerivesFromNothing">
      <summary>Задает для базового типа этого типа сущностей значение null. Это значит, что этот тип сущностей не является производным.</summary>
      <returns>Возвращает себя, поэтому несколько вызовов можно объединить в цепочку.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.HasKey(System.Reflection.PropertyInfo)">
      <summary>Настраивает ключевые свойства для этого типа сущностей.</summary>
      <returns>Возвращает себя, поэтому несколько вызовов можно объединить в цепочку.</returns>
      <param name="keyProperty">Свойство, добавляемое к ключевым свойствам этого типа сущностей.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.IsAbstract">
      <summary>Получает или задает значение, указывающее, является ли этот тип абстрактным.</summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.Keys">
      <summary>Получает коллекцию ключей для этого типа сущностей.</summary>
      <returns>Возвращает значение <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.Kind">
      <summary>Получает <see cref="T:Microsoft.Data.Edm.EdmTypeKind" /> этого <see cref="T:System.Web.Http.OData.Builder.IEdmTypeConfiguration" /></summary>
      <returns>Возвращает значение <see cref="T:Microsoft.Data.Edm.EdmTypeKind" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.NavigationProperties">
      <summary>Получает коллекцию <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyConfiguration" /> этого типа сущностей.</summary>
      <returns>Возвращает значение <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.RemoveKey(System.Web.Http.OData.Builder.PrimitivePropertyConfiguration)">
      <summary>Удаляет свойство из коллекции ключей сущности.</summary>
      <param name="keyProperty">Удаляемый ключ.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.RemoveProperty(System.Reflection.PropertyInfo)"></member>
    <member name="T:System.Web.Http.OData.Builder.EntityTypeConfiguration`1">
      <summary>Представляет <see cref="T:Microsoft.Data.Edm.IEdmEntityType" />, который можно создать с помощью <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" /> .</summary>
      <typeparam name="TEntityType">Резервный тип CLR <see cref="T:Microsoft.Data.Edm.IEdmEntityType" />.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.Abstract">
      <summary>Помечает этот тип сущностей как абстрактный.</summary>
      <returns>Возвращает себя, поэтому несколько вызовов можно объединить в цепочку.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.Action(System.String)">
      <summary>Создает действие, привязываемое к этому EntityType.</summary>
      <returns>ActionConfiguration для разрешения дополнительных настроек нового действия.</returns>
      <param name="name">Имя действия.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.BaseType">
      <summary>Получает базовый тип этого типа сущностей.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.Collection">
      <summary>Используется для коллекции сущностей, с помощью которых можно настроить действия, которые можно привязать к EntityCollections.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.DerivesFrom``1">
      <summary>Задает базовый тип этого типа сущностей.</summary>
      <returns>Возвращает себя, поэтому несколько вызовов можно объединить в цепочку.</returns>
      <typeparam name="TBaseType">Базовый тип сущностей.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.DerivesFromNothing">
      <summary>Задает для базового типа этого типа сущностей значение null. Это значит, что этот тип сущностей не является производным.</summary>
      <returns>Возвращает себя, поэтому несколько вызовов можно объединить в цепочку.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.HasKey``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Настраивает ключевые свойства для этого типа сущностей.</summary>
      <returns>Возвращает себя, поэтому несколько вызовов можно объединить в цепочку.</returns>
      <param name="keyDefinitionExpression">Лямбда-выражение, представляющее свойство, используемое как первичный ключ. Например, для C# t =&amp;gt; t.Id и для Visual Basic – .Net Function(t) t.Id.</param>
      <typeparam name="TKey">Тип ключа.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.HasMany``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})">
      <summary>Настраивает множественную связь из этого типа сущностей.</summary>
      <returns>Объект конфигурации, который может использоваться для последующей настройки связи.</returns>
      <param name="navigationPropertyExpression">Лямбда-выражение, представляющее свойство навигации для связи. Например, для C# t =&amp;gt; t.MyProperty и для Visual Basic – .Net Function(t) t.MyProperty.</param>
      <typeparam name="TTargetEntity">Тип сущности на другом конце связи.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.HasOptional``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Настраивает дополнительную связь из этого типа сущностей.</summary>
      <returns>Объект конфигурации, который может использоваться для последующей настройки связи.</returns>
      <param name="navigationPropertyExpression">Лямбда-выражение, представляющее свойство навигации для связи. Например, для C# t =&amp;gt; t.MyProperty и для Visual Basic – .Net Function(t) t.MyProperty.</param>
      <typeparam name="TTargetEntity">Тип сущности на другом конце связи.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.HasRequired``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Настраивает необходимую связь из этого типа сущностей.</summary>
      <returns>Объект конфигурации, который может использоваться для последующей настройки связи.</returns>
      <param name="navigationPropertyExpression">Лямбда-выражение, представляющее свойство навигации для связи. Например, для C# t =&amp;gt; t.MyProperty и для Visual Basic – .Net Function(t) t.MyProperty.</param>
      <typeparam name="TTargetEntity">Тип сущности на другом конце связи.</typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.NavigationProperties">
      <summary>Получает коллекцию <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyConfiguration" /> этого типа сущностей.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.TransientAction(System.String)">
      <summary>Создает действие, не всегда привязываемое к этому EntityType.</summary>
      <returns>ActionConfiguration для разрешения дополнительных настроек нового «переходного» действия.</returns>
      <param name="name">Имя действия.</param>
    </member>
    <member name="T:System.Web.Http.OData.Builder.IEdmTypeConfiguration">
      <summary>Представляет EdmType.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.ClrType">
      <summary>Тип .NET, связанный с EdmType.</summary>
      <returns>Возвращает значение <see cref="T:System.Type" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.FullName">
      <summary>Полное имя (включая пространство имен) EdmType.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.Kind">
      <summary>Вид EdmType. Примеры содержат EntityType, ComplexType, PrimitiveType, CollectionType.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.Data.Edm.EdmTypeKind" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.ModelBuilder">
      <summary>ODataModelBuilder, используемый для создания этого IEdmType.</summary>
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.Name">
      <summary>Имя EdmType.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.Namespace">
      <summary>Пространство имен EdmType.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.NavigationLinkBuilder"></member>
    <member name="M:System.Web.Http.OData.Builder.NavigationLinkBuilder.#ctor(System.Func{System.Web.Http.OData.EntityInstanceContext,Microsoft.Data.Edm.IEdmNavigationProperty,System.Uri},System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Builder.NavigationLinkBuilder" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.NavigationLinkBuilder.Factory"></member>
    <member name="P:System.Web.Http.OData.Builder.NavigationLinkBuilder.FollowsConventions"></member>
    <member name="T:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration">
      <summary>Used to configure the binding for a navigation property for an entity set. This configuration functionality is exposed by the model builder Fluent API, see <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration.#ctor(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Web.Http.OData.Builder.EntitySetConfiguration)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration" /> class.</summary>
      <param name="navigationProperty">The navigation property for the binding.</param>
      <param name="entitySet">The target entity set of the binding.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration.EntitySet">
      <summary>Gets the target entity set of the binding.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration.NavigationProperty">
      <summary>Gets the navigation property of the binding.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.NavigationPropertyConfiguration"></member>
    <member name="M:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.#ctor(System.Reflection.PropertyInfo,Microsoft.Data.Edm.EdmMultiplicity,System.Web.Http.OData.Builder.EntityTypeConfiguration)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyConfiguration" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.DeclaringEntityType"></member>
    <member name="P:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.Kind"></member>
    <member name="P:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.Multiplicity"></member>
    <member name="M:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.Optional"></member>
    <member name="P:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.RelatedClrType"></member>
    <member name="M:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.Required"></member>
    <member name="T:System.Web.Http.OData.Builder.NonbindingParameterConfiguration">
      <summary> Представляет параметр процедуры без привязки.   Для действий параметры без привязки предоставлены в теле запроса POST. Для функций параметры без привязки предоставлены 3 способами – ~/.../Function(p1=value) - ~/.../Function(p1=@x)?@x=value - ~/.../Function?p1=value (допустимо, если функция является сегментом пути последнего URL-адреса).   </summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.NonbindingParameterConfiguration.#ctor(System.String,System.Web.Http.OData.Builder.IEdmTypeConfiguration)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Builder.NonbindingParameterConfiguration" />.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder">
      <summary>Используется для автосопоставления классов CLR с моделью EDM на основе набора <see cref="T:System.Web.Http.OData.Builder.Conventions.IConvention" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.#ctor">
      <summary>Инициализирует новый <see cref="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.#ctor(System.Web.Http.HttpConfiguration)">
      <summary>Инициализирует новый <see cref="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder" />.</summary>
      <param name="configuration">Используемый <see cref="T:System.Web.Http.HttpConfiguration" />.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.AddComplexType(System.Type)">
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.Builder.ComplexTypeConfiguration" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.AddEntity(System.Type)">
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.Builder.EntityTypeConfiguration" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.AddEntitySet(System.String,System.Web.Http.OData.Builder.EntityTypeConfiguration)">
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.Builder.EntitySetConfiguration" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.GetEdmModel">
      <returns>Возвращает значение <see cref="T:Microsoft.Data.Edm.IEdmModel" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.Ignore``1">
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder" />.</returns>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.Ignore(System.Type[])">
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataConventionModelBuilder.OnModelCreating">
      <summary>Это действие выполняется после того, как <see cref="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder" /> запустил все соглашения, но до блокировки конфигурации, и используется для создания <see cref="T:Microsoft.Data.Edm.IEdmModel" />.</summary>
      <returns>Возвращает значение <see cref="T:System.Action`1" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ODataModelBuilder">
      <summary>Сопоставляет классы CLR с моделью EDM.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.#ctor"></member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.Action(System.String)">
      <summary>Добавляет действие без привязки в конструктор.</summary>
      <returns>Объект конфигурации для указанного действия.</returns>
      <param name="name">Имя действия.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.AddComplexType(System.Type)">
      <summary>Регистрирует сложный тип как часть модели и возвращает объект, который можно использовать для конфигурации сущности. Этот метод можно вызывать несколько раз для одного объекта, чтобы выполнить несколько строк конфигурации.</summary>
      <returns>Объект конфигурации для указанного сложного типа.</returns>
      <param name="type">Регистрируемый или конфигурируемый тип.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.AddEntity(System.Type)">
      <summary>Регистрирует тип объекта как часть модели и возвращает объект, который можно использовать для конфигурации сущности. Этот метод можно вызывать несколько раз для одного объекта, чтобы выполнить несколько строк конфигурации.</summary>
      <returns>Объект конфигурации для указанного типа объекта.</returns>
      <param name="type">Регистрируемый или конфигурируемый тип.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.AddEntitySet(System.String,System.Web.Http.OData.Builder.EntityTypeConfiguration)">
      <summary>Регистрирует набор сущностей как часть модели и возвращает объект, который можно использовать для конфигурации набора сущностей. Этот метод можно вызывать несколько раз для одного и того же типа, чтобы выполнить несколько строк конфигурации.</summary>
      <returns>Объект конфигурации для указанного набора сущностей.</returns>
      <param name="name">Имя набора сущностей.</param>
      <param name="entityType">Регистрируемый или конфигурируемый тип.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.AddProcedure(System.Web.Http.OData.Builder.ProcedureConfiguration)">
      <summary>Добавляет процедуру в модель.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.ComplexType``1">
      <summary>Регистрирует тип как сложный тип модели и возвращает объект, который можно использовать для конфигурации сложного типа. Этот метод можно вызывать несколько раз для одного и того же типа, чтобы выполнить несколько строк конфигурации.</summary>
      <returns>Объект конфигурации для указанного сложного типа.</returns>
      <typeparam name="TComplexType">Регистрируемый или конфигурируемый тип.</typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.ContainerName">
      <summary>Получает или задает имя контейнера, который будет удерживать все действия, функции и EntitySet.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.DataServiceVersion">
      <summary>Получает или задает версию службы данных модели. Значение по умолчанию — 3.0.</summary>
      <returns>Возвращает значение <see cref="T:System.Version" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.Entity``1">
      <summary>Регистрирует тип объекта как часть модели и возвращает объект, который можно использовать для конфигурации сущности. Этот метод можно вызывать несколько раз для одного объекта, чтобы выполнить несколько строк конфигурации.</summary>
      <returns>Объект конфигурации для указанного типа объекта.</returns>
      <typeparam name="TEntityType">Регистрируемый или конфигурируемый тип.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.EntitySet``1(System.String)">
      <summary>Регистрирует набор сущностей как часть модели и возвращает объект, который можно использовать для конфигурации набора сущностей. Этот метод можно вызывать несколько раз для одного и того же типа, чтобы выполнить несколько строк конфигурации.</summary>
      <returns>Объект конфигурации для указанного набора сущностей.</returns>
      <param name="name">Имя набора сущностей.</param>
      <typeparam name="TEntityType">Тип объекта набора объектов.</typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.EntitySets">
      <summary>Получает коллекцию наборов объектов EDM в модели для создания.</summary>
      <returns>Возвращает значение <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.GetEdmModel">
      <summary>Создает <see cref="T:Microsoft.Data.Edm.IEdmModel" /> на основе конфигурации, произведенной с помощью конструктора.</summary>
      <returns>Созданная модель.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.GetTypeConfigurationOrNull(System.Type)">
      <summary>Производит попытку поиска предварительно настроенного структурного типа или простого типа, соответствующего T. Если соответствий не найдено, возвращается значение NULL.</summary>
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.Builder.IEdmTypeConfiguration" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.MaxDataServiceVersion">
      <summary>Получает или задает максимальную версию службы данных модели. Значение по умолчанию — 3.0.</summary>
      <returns>Возвращает значение <see cref="T:System.Version" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.Namespace">
      <summary>Получает или настраивает пространство имен, которое будет использоваться для окончательной модели.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.Procedures">
      <summary>Получает коллекцию процедур (т.е. действий, функций или ServiceOperation) в создаваемой модели.</summary>
      <returns>Возвращает значение <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.RemoveEntitySet(System.String)">
      <summary>Удаляет набор сущностей из модели.</summary>
      <returns>
        <see cref="" /> если в модели есть набор сущностей и <see cref="" /> – если его нет.</returns>
      <param name="name">Имя удаляемого набор сущностей.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.RemoveProcedure(System.String)">
      <summary>      Удалите процедуру из модели.</summary>
      <returns>Значение true, если процедура есть в модели; значение false – если ее нет.</returns>
      <param name="name">Имя удаляемой процедуры.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.RemoveProcedure(System.Web.Http.OData.Builder.ProcedureConfiguration)">
      <summary>Удалите процедуру из модели.</summary>
      <returns>Значение true, если процедура есть в модели; значение false – если ее нет.</returns>
      <param name="procedure">Удаляемая процедура.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.RemoveStructuralType(System.Type)">
      <summary>Удаляет тип из модели.</summary>
      <returns>Значение true, если тип есть в модели; значение false – если его нет.</returns>
      <param name="type">Удаляемый тип.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.StructuralTypes">
      <summary>Получает коллекцию типов EDM в создаваемой модели.</summary>
      <returns>Возвращает значение <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ParameterConfiguration">
      <summary>Представляет параметр для процедуры</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ParameterConfiguration.#ctor(System.String,System.Web.Http.OData.Builder.IEdmTypeConfiguration)"></member>
    <member name="P:System.Web.Http.OData.Builder.ParameterConfiguration.Name">
      <summary>Имя параметра.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ParameterConfiguration.TypeConfiguration">
      <summary>Тип параметра.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration">
      <summary>Используется для конфигурации простого свойства типа сущности или сложного типа. Эта функциональность конфигурации предоставляется конструктором моделей Fluent API, см. <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration.#ctor(System.Reflection.PropertyInfo,System.Web.Http.OData.Builder.StructuralTypeConfiguration)"></member>
    <member name="M:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration.IsOptional">
      <summary>Настраивает свойство необязательным.</summary>
      <returns>Возвращает себя, поэтому несколько вызовов можно объединить в цепочку.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration.IsRequired">
      <summary>Настраивает свойство обязательным.</summary>
      <returns>Возвращает себя, поэтому несколько вызовов можно объединить в цепочку.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration.Kind"></member>
    <member name="P:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration.RelatedClrType"></member>
    <member name="T:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration">
      <summary>Представляет PrimitiveType</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,Microsoft.Data.Edm.IEdmPrimitiveType,System.Type)">
      <summary>Этот конструктор открыт только для модульного тестирования. Чтобы получить PrimitiveTypeConfiguration используйте ODataModelBuilder.GetTypeConfigurationOrNull(Type)</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.ClrType"></member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.EdmPrimitiveType">
      <summary>Возвращает IEdmPrimitiveType, связанный с этим PrimitiveTypeConfiguration</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.FullName"></member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.Kind"></member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.ModelBuilder"></member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.Name"></member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.Namespace"></member>
    <member name="T:System.Web.Http.OData.Builder.ProcedureConfiguration">
      <summary>Представляет процедуру, предоставляемую в модели.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ProcedureConfiguration.#ctor"></member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.ContainerQualifiedName">
      <summary>Полное имя процедуры при использовании в URL-адресах OData. Квалификация нужна, чтобы отличить процедуру от других возможных одиночных идентификаторов.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.EntitySet">
      <summary>EntitySet, из которого возвращаются сущности.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.FullName">
      <summary>FullName – это ContainerQualifiedName.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.FullyQualifiedName">
      <summary>FullyQualifiedName – это ContainerQualifiedName, проверяемый позже с помощью пространства имен. В основном он не обязателен, потому что большинство служб имеют максимум один контейнер с одним и тем же именем.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.IsAlwaysBindable">
      <summary>Если процедура имеет значение IsBindable, она всегда привязывается.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.IsBindable">
      <summary>Можно ли привязать процедуру к URL-адресу, представляющему BindingParameter.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.IsComposable">
      <summary>Можно ли из процедуры составить что-либо. Например, можно ли URL-адрес, вызывающий процедуру, использовать как базовый URL-адрес для запроса, вызывающего процедуру, а также производящий другие действия над результатами.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.IsSideEffecting">
      <summary>Имеет ли процедура побочные эффекты.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.Kind">
      <summary>Тип процедуры, который может быть действием, функцией или ServiceOperation</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.ModelBuilder"></member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.Name">
      <summary>Имя процедуры</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.Parameters">
      <summary>Параметры процедуры</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.ReturnType">
      <summary>Тип, возвращаемый при вызове процедуры.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ProcedureKind">
      <summary>Вид процедуры OData. Действие, функция или ServiceOperation.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Builder.ProcedureKind.Action">
      <summary />
    </member>
    <member name="F:System.Web.Http.OData.Builder.ProcedureKind.Function">
      <summary />
    </member>
    <member name="F:System.Web.Http.OData.Builder.ProcedureKind.ServiceOperation">
      <summary />
    </member>
    <member name="T:System.Web.Http.OData.Builder.PropertyConfiguration">
      <summary>Базовый класс для всех конфигураций свойств.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.PropertyConfiguration.#ctor(System.Reflection.PropertyInfo,System.Web.Http.OData.Builder.StructuralTypeConfiguration)"></member>
    <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.AddedExplicitly">
      <returns>Возвращает значение <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.DeclaringType">
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.Builder.StructuralTypeConfiguration" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.Kind">
      <summary>Получает <see cref="T:System.Web.Http.OData.Builder.PropertyKind" /> свойства.</summary>
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.Builder.PropertyKind" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.Name">
      <summary>Получает имя свойства.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.PropertyInfo">
      <summary>Получает CLR <see cref="P:System.Web.Http.OData.Builder.PropertyConfiguration.PropertyInfo" /> для сопоставления.</summary>
      <returns>Возвращает значение <see cref="T:System.Reflection.PropertyInfo" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.RelatedClrType">
      <summary>Получает CLR <see cref="T:System.Type" /> свойства.</summary>
      <returns>Возвращает значение <see cref="T:System.Type" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.PropertyKind"></member>
    <member name="F:System.Web.Http.OData.Builder.PropertyKind.Primitive">
      <summary>.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Builder.PropertyKind.Complex">
      <summary>.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Builder.PropertyKind.Collection">
      <summary>.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Builder.PropertyKind.Navigation">
      <summary>.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.SelfLinkBuilder`1">
      <summary> Инкапсулирует фабрику ссылок на себя и проверяет, следует ли фабрика ссылок соглашениям. </summary>
      <typeparam name="T">Тип создаваемой ссылки на себя. Он предназначен для ссылок идентификатора и ссылок чтения и правки.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.SelfLinkBuilder`1.#ctor(System.Func{System.Web.Http.OData.EntityInstanceContext,`0},System.Boolean)">
      <summary> Создает новый экземпляр <see cref="T:System.Web.Http.OData.Builder.SelfLinkBuilder`1" />. </summary>
      <param name="linkFactory">Фабрика ссылок.</param>
      <param name="followsConventions">Следует ли фабрика соглашениям odata для генерации ссылок.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.SelfLinkBuilder`1.Factory">
      <summary> Получает фабрику для генерации ссылок. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.SelfLinkBuilder`1.FollowsConventions">
      <summary> Получает логическое значение, указывающее, следует ли фабрика ссылок соглашениям OData. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.StructuralPropertyConfiguration">
      <summary>Базовый класс для всех структурных конфигураций свойств.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralPropertyConfiguration.#ctor(System.Reflection.PropertyInfo,System.Web.Http.OData.Builder.StructuralTypeConfiguration)"></member>
    <member name="P:System.Web.Http.OData.Builder.StructuralPropertyConfiguration.OptionalProperty"></member>
    <member name="T:System.Web.Http.OData.Builder.StructuralTypeConfiguration">
      <summary>Представляет <see cref="T:Microsoft.Data.Edm.IEdmStructuredType" />, который можно создать с помощью <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" /> .</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.#ctor"></member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,System.Type)"></member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.AddCollectionProperty(System.Reflection.PropertyInfo)">
      <summary>Добавляет свойство коллекции в этот тип edm.</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Builder.CollectionPropertyConfiguration" />, чтобы свойство можно было настроить позже.</returns>
      <param name="propertyInfo">Добавляемое свойство.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.AddComplexProperty(System.Reflection.PropertyInfo)">
      <summary>Добавляет сложное свойство в этот тип edm.</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Builder.ComplexPropertyConfiguration" />, чтобы свойство можно было настроить позже.</returns>
      <param name="propertyInfo">Добавляемое свойство.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.AddProperty(System.Reflection.PropertyInfo)">
      <summary>Добавляет простое свойство в этот тип edm.</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration" />, чтобы свойство можно было настроить позже.</returns>
      <param name="propertyInfo">Добавляемое свойство.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.ClrType">
      <summary>Получает резервный CLR <see cref="T:System.Type" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.ExplicitProperties"></member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.FullName">
      <summary>Получает полное имя этого типа edm.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.IgnoredProperties">
      <summary>Получает свойства из резервного типа CLR, которые нужно игнорировать в этом типе edm.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.Kind">
      <summary>Получает <see cref="T:Microsoft.Data.Edm.EdmTypeKind" /> этого типа edm.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.ModelBuilder">
      <summary>
        <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.Name">
      <summary>Получает имя этого типа edm.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.Namespace">
      <summary>Получает пространство имен этого типа edm.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.Properties">
      <summary>Получает объявленные свойства этого типа edm.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.RemovedProperties"></member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.RemoveProperty(System.Reflection.PropertyInfo)">
      <summary>Удаляет указанное свойство.</summary>
      <param name="propertyInfo">Удаляемое свойство.</param>
    </member>
    <member name="T:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1">
      <typeparam name="TStructuralType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.#ctor(System.Web.Http.OData.Builder.StructuralTypeConfiguration)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.CollectionProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})">
      <typeparam name="TElementType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.ComplexProperty``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <typeparam name="TComplexType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Ignore``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <typeparam name="TProperty"></typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Properties"></member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Byte[]}})"></member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.IO.Stream}})"></member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{``0}}})">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.String}})"></member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <typeparam name="T"></typeparam>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter">
      <summary>Класс <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> для обработки OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.CanReadType(System.Type)">
      <returns>Возвращает значение <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.CanWriteType(System.Type)">
      <returns>Возвращает значение <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.GetPerRequestFormatterInstance(System.Type,System.Net.Http.HttpRequestMessage,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <returns>Возвращает значение <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.MessageReaderQuotas">
      <summary>Получает или задает <see cref="T:Microsoft.Data.OData.ODataMessageQuotas" />, используемый этим модулем форматирования на стороне чтения.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.Data.OData.ODataMessageQuotas" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.MessageWriterQuotas">
      <summary>Получает или задает <see cref="T:Microsoft.Data.OData.ODataMessageQuotas" />, используемый этим модулем форматирования на стороне записи.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.Data.OData.ODataMessageQuotas" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger)">
      <returns>Возвращает значение <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.SetDefaultContentHeaders(System.Type,System.Net.Http.Headers.HttpContentHeaders,System.Net.Http.Headers.MediaTypeHeaderValue)"></member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext)">
      <returns>Возвращает значение <see cref="T:System.Threading.Tasks.Task" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.ODataMediaTypeFormatters">
      <summary>Классы <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> для обработки OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatters.Create">
      <summary>Создает набор модулей форматирования типа мультимедиа для обработки OData.</summary>
      <returns>Набор модулей форматирования типа мультимедиа для обработки OData.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.ODataModelBinderProvider">
      <summary>Предоставляет <see cref="T:System.Web.Http.ModelBinding.IModelBinder" /> для простых типов EDM.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataModelBinderProvider.#ctor"></member>
    <member name="M:System.Web.Http.OData.Formatter.ODataModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)"></member>
    <member name="T:System.Web.Http.OData.Query.AllowedArithmeticOperators">
      <summary> Арифметические операторы, позволяющие выполнение запроса с использованием $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.None">
      <summary> Значение, которое соответствует отсутствующему допускающему арифметическому оператору в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.Add">
      <summary> Значение, соответствующее допускающему арифметическому оператору «Add» в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.Subtract">
      <summary> Значение, соответствующее допускающему арифметическому оператору «Subtract» в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.Multiply">
      <summary> Значение, соответствующее допускающему арифметическому оператору «Multiply» в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.Divide">
      <summary> Значение, соответствующее допускающему арифметическому оператору «Divide» в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.Modulo">
      <summary> Значение, соответствующее допускающему арифметическому оператору «Modulo» в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.All">
      <summary> Значение, соответствующее допускающему все арифметические операторы в $filter. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.AllowedFunctions">
      <summary> Функции, позволяющие выполнение запроса с использованием $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.None">
      <summary> Значение, которое соответствует допуску отсутствия функций в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.StartsWith">
      <summary> Значение, которое соответствует допускающей функции StartsWith в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.EndsWith">
      <summary> Значение, которое соответствует допускающей функции EndsWith в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.SubstringOf">
      <summary> Значение, которое соответствует допускающей функции SubstringOf в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Length">
      <summary> Значение, которое соответствует допускающей функции Length в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.IndexOf">
      <summary> Значение, которое соответствует допускающей функции IndexOf в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Concat">
      <summary> Значение, которое соответствует допускающей функции Concat в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Substring">
      <summary> Значение, которое соответствует допускающей функции Substring в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.ToLower">
      <summary> Значение, которое соответствует допускающей функции ToLower в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.ToUpper">
      <summary> Значение, которое соответствует допускающей функции ToUpper в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Trim">
      <summary> Значение, которое соответствует допускающей функции Trim в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Cast">
      <summary> Значение, которое соответствует допускающей функции Cast в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Year">
      <summary> Значение, которое соответствует допускающей функции Year в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Years">
      <summary> Значение, которое соответствует допускающей функции Years в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Month">
      <summary> Значение, которое соответствует допускающей функции Month в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Months">
      <summary> Значение, которое соответствует допускающей функции Months в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Day">
      <summary> Значение, которое соответствует допускающей функции Day в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Days">
      <summary> Значение, которое соответствует допускающей функции Days в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Hour">
      <summary> Значение, которое соответствует допускающей функции Hour в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Hours">
      <summary> Значение, которое соответствует допускающей функции Hours в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Minute">
      <summary> Значение, которое соответствует допускающей функции Minute в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Minutes">
      <summary> Значение, которое соответствует допускающей функции Minutes в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Second">
      <summary> Значение, которое соответствует допускающей функции Second в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Seconds">
      <summary> Значение, которое соответствует допускающей функции Seconds в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Round">
      <summary> Значение, которое соответствует допускающей функции Round в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Floor">
      <summary> Значение, которое соответствует допускающей функции Floor в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Ceiling">
      <summary> Значение, которое соответствует допускающей функции Ceiling в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.IsOf">
      <summary> Значение, которое соответствует допускающей функции IsOf в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Any">
      <summary> Значение, которое соответствует допускающей функции Any в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.All">
      <summary> Значение, которое соответствует допускающей функции All в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.AllStringFunctions">
      <summary> Значение, которое соответствует всем допускающим строковым функциям в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.AllDateTimeFunctions">
      <summary> Значение, которое соответствует всем допускающим функциям, связанным с датой и временем, в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.AllMathFunctions">
      <summary> Значение, которое соответствует допускающим математическим функциям, в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.AllFunctions">
      <summary> Значение, которое соответствует всем допускающим функциям в $filter. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.AllowedLogicalOperators">
      <summary> Логические операторы, позволяющие выполнение запроса с использованием $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.None">
      <summary> Значение, которое соответствует отсутствующему допускающему логическому оператору в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.Or">
      <summary> Значение, соответствующее допускающему логическому оператору «Or» в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.And">
      <summary> Значение, соответствующее допускающему логическому оператору «And» в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.Equal">
      <summary> Значение, соответствующее допускающему логическому оператору «Equal» в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.NotEqual">
      <summary> Значение, соответствующее допускающему логическому оператору «NotEqual» в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.GreaterThan">
      <summary> Значение, соответствующее допускающему логическому оператору «GreaterThan» в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.GreaterThanOrEqual">
      <summary> Значение, соответствующее допускающему логическому оператору «GreaterThanOrEqual» в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.LessThan">
      <summary> Значение, соответствующее допускающему логическому оператору «LessThan» в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.LessThanOrEqual">
      <summary> Значение, соответствующее допускающему логическому оператору «LessThanOrEqual» в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.Not">
      <summary> Значение, соответствующее допускающему логическому оператору «Not» в $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.All">
      <summary> Значение, соответствующее допускающему все логические операторы $filter. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.AllowedQueryOptions">
      <summary> Параметры запроса OData для выполнения запроса. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.None">
      <summary> Значение, соответствующее для допуска параметров без запроса. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Filter">
      <summary> Значение, соответствующее для допуска параметра запроса $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Expand">
      <summary> Значение, соответствующее для допуска параметра запроса $expand. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Select">
      <summary> Значение, соответствующее для допуска параметра запроса $select. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.OrderBy">
      <summary> Значение, соответствующее для допуска параметра запроса $orderby. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Top">
      <summary> Значение, соответствующее для допуска параметра запроса $top. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Skip">
      <summary> Значение, соответствующее для допуска параметра запроса $skip. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.InlineCount">
      <summary> Значение, соответствующее для допуска параметра запроса $inlinecount. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Format">
      <summary> Значение, соответствующее для допуска параметра запроса $format. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.SkipToken">
      <summary> Значение, соответствующее для допуска параметра запроса $skiptoken. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Supported">
      <summary> Значение, соответствующее параметрам запроса по умолчанию, которые поддерживаются <see cref="T:System.Web.Http.QueryableAttribute" />. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.All">
      <summary> Значение, соответствующее для допуска всех параметров запроса. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.FilterQueryOption">
      <summary>Этим определяются параметры запроса $filter OData для выполнения запроса.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.FilterQueryOption.#ctor(System.String,System.Web.Http.OData.ODataQueryContext)">
      <summary>Инициализируйте новый экземпляр <see cref="T:System.Web.Http.OData.Query.FilterQueryOption" /> на основе необработанного значения $filter и модели EdmModel из <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
      <param name="rawValue">Необработанное значение запроса $filter. Это может быть значение null или пустое значение.</param>
      <param name="context">
        <see cref="T:System.Web.Http.OData.ODataQueryContext" />, которое содержит <see cref="T:Microsoft.Data.Edm.IEdmModel" /> и некоторую информацию о типе</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.FilterQueryOption.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Примените запрос на фильтрацию к данному IQueryable.</summary>
      <returns>Запрос, к которому был применен запрос на фильтрацию.</returns>
      <param name="query">IQueryable, к которому мы применяем запрос на фильтрацию.</param>
      <param name="querySettings">Указывает, нужно ли обрабатывать распространения значения null. Передайте значение false, если основной поставщик запросов обрабатывает распространения значения null. В противном случае передайте значение true.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.FilterQueryOption.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings,System.Web.Http.Dispatcher.IAssembliesResolver)">
      <summary>Примените запрос на фильтрацию к данному IQueryable.</summary>
      <returns>Возвращает значение <see cref="T:System.Linq.IQueryable" />.</returns>
      <param name="query">IQueryable, к которому мы применяем запрос на фильтрацию.</param>
      <param name="querySettings">Указывает, нужно ли обрабатывать распространения значения null. Передайте значение false, если основной поставщик запросов обрабатывает распространения значения null. В противном случае передайте значение true.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.FilterQueryOption.Context">
      <summary>Получает данный <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.FilterQueryOption.FilterClause">
      <summary>Получает проанализированный <see cref="P:System.Web.Http.OData.Query.FilterQueryOption.FilterClause" /> для данного параметра запроса.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.Data.OData.Query.SemanticAst.FilterClause" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.FilterQueryOption.RawValue">
      <summary>Получает необработанное значение $filter.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Query.FilterQueryOption.Validate(System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Проверьте запрос на фильтрацию на основе данного <paramref name="validationSettings" />. При сбое проверки он вызывает конструктор ODataException.</summary>
      <param name="validationSettings">Экземпляр <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" />, который содержит все параметры проверки.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.FilterQueryOption.Validator">
      <summary>Получает или задает проверяющий элемент управления для запроса на фильтрацию.</summary>
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.Query.Validators.FilterQueryValidator" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Query.HandleNullPropagationOption">
      <summary>Данное перечисление определяет, как обрабатывать распространения значения null в запрашиваемой поддержке.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.HandleNullPropagationOption.Default">
      <summary>Определите, как обрабатывать распространения значения null в зависимости от поставщика запросов при построении запросов. Это значение по умолчанию, которое используется в <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" />.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.HandleNullPropagationOption.True">
      <summary>Обрабатывать распространения значения null при построении запроса.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.HandleNullPropagationOption.False">
      <summary>Не обрабатывать распространения значения null при построении запроса.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.InlineCountQueryOption">
      <summary> Представляет значение параметра запроса $inlinecount и предоставляет способ извлечения нескольких сущностей, которые соответствуют запросу. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.InlineCountQueryOption.#ctor(System.String,System.Web.Http.OData.ODataQueryContext)">
      <summary> Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Query.InlineCountQueryOption" />. </summary>
      <param name="rawValue">Необработанное значение для параметра запроса $inlinecount.</param>
      <param name="context">
        <see cref="T:System.Web.Http.OData.ODataQueryContext" />, которое содержит <see cref="T:Microsoft.Data.Edm.IEdmModel" /> и некоторую информацию о типе</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.InlineCountQueryOption.Context">
      <summary> Получает данный <see cref="T:System.Web.Http.OData.ODataQueryContext" />. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.InlineCountQueryOption.GetEntityCount(System.Linq.IQueryable)">
      <summary> Получает несколько сущностей, которые соответствуют данному запросу, если ответ должен содержать встроенное значение count, или, в противном случае, null. </summary>
      <returns>Количество сущностей, которые соответствуют определенному запросу, если ответ должен содержать встроенное количество, или, в противном случае, null.</returns>
      <param name="query">Запрос, для которого вычисляется количество.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.InlineCountQueryOption.RawValue">
      <summary> Получает необработанное значение $inlinecount. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.InlineCountQueryOption.Value">
      <summary> Получает значение $inlinecount в проанализированной форме. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.InlineCountValue">
      <summary> Определяет перечисление для значений параметров запроса $inlinecount. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.InlineCountValue.None">
      <summary> Соответствует значению параметра запроса $inlinecount «none». </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.InlineCountValue.AllPages">
      <summary> Соответствует значению параметра запроса $inlinecount «allpages». </summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.ODataQueryOptions">
      <summary>Этим определяются параметры составного запроса OData, который может использоваться для построения запроса. На данный момент поддерживаются только параметры $filter, $orderby, $top, $skip и $inlinecount.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.#ctor(System.Web.Http.OData.ODataQueryContext,System.Net.Http.HttpRequestMessage)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions" /> на основе входящего запроса и некоторых метаданных из <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
      <param name="context">
        <see cref="T:System.Web.Http.OData.ODataQueryContext" />, которое содержит <see cref="T:Microsoft.Data.Edm.IEdmModel" /> и некоторую информацию о типе</param>
      <param name="request">Входящее сообщение запроса</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.ApplyTo(System.Linq.IQueryable)">
      <summary>  Примените отдельный запрос к данному IQueryable в правильном порядке.</summary>
      <returns>Запрос, к которому был применен запрос.</returns>
      <param name="query">IQueryable, к которому применяется запрос.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Примените отдельный запрос к данному IQueryable в правильном порядке.</summary>
      <returns>Запрос, к которому был применен запрос.</returns>
      <param name="query">IQueryable, к которому применяется запрос.</param>
      <param name="querySettings">Настройки, используемые при построении запроса.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Context">
      <summary>Получает данный <see cref="T:System.Web.Http.OData.ODataQueryContext" /></summary>
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Filter">
      <summary>Возвращает <see cref="T:System.Web.Http.OData.Query.FilterQueryOption" />.</summary>
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.Query.FilterQueryOption" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.InlineCount">
      <summary>Возвращает <see cref="T:System.Web.Http.OData.Query.InlineCountQueryOption" />.</summary>
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.Query.InlineCountQueryOption" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.IsSystemQueryOption(System.String)">
      <summary>Проверьте, является ли заданный параметр запроса параметром запроса системы OData.</summary>
      <returns>Значение true, если параметр запроса является параметром запроса системы OData; в противном случае, false.</returns>
      <param name="queryOptionName">Имя параметра запроса.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.LimitResults``1(System.Linq.IQueryable{``0},System.Int32,System.Boolean@)">
      <summary>Ограничивает результаты запроса до максимального количества результатов.</summary>
      <returns>Ограниченные результаты запроса.</returns>
      <param name="queryable">Содержимое запроса, для которого применяется ограничение.</param>
      <param name="limit">Предел для результатов запроса.</param>
      <param name="resultsLimited">true если результаты запроса ограничены; в противном случае false</param>
      <typeparam name="T">Тип CLR сущности</typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.OrderBy">
      <summary>Возвращает <see cref="T:System.Web.Http.OData.Query.OrderByQueryOption" />.</summary>
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.Query.OrderByQueryOption" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.RawValues">
      <summary>Получает необработанную строку для всех параметров запроса OData</summary>
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.Query.ODataRawQueryOptions" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Request">
      <summary>Получает сообщение запроса, связанное с этим экземпляром.</summary>
      <returns>Возвращает значение <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Skip">
      <summary>Возвращает <see cref="T:System.Web.Http.OData.Query.SkipQueryOption" />.</summary>
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.Query.SkipQueryOption" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Top">
      <summary>Возвращает <see cref="T:System.Web.Http.OData.Query.TopQueryOption" />.</summary>
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.Query.TopQueryOption" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.Validate(System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Проверьте все запросы OData включая $skip, $top, $orderby и $filter, на основе заданного <paramref name="validationSettings" />. При сбое проверки вызывает конструктор ODataException.</summary>
      <param name="validationSettings">Экземпляр <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" />, который содержит все параметры проверки.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Validator">
      <summary>Получает или задает проверяющий элемент управления для запросов.</summary>
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.Query.Validators.ODataQueryValidator" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Query.ODataQueryOptions`1">
      <summary>Этим определяются параметры составного запроса OData, который может использоваться для построения запроса. На данный момент поддерживаются только параметры $filter, $orderby, $top, $skip.</summary>
      <typeparam name="TEntity"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions`1.#ctor(System.Web.Http.OData.ODataQueryContext,System.Net.Http.HttpRequestMessage)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions" /> на основе входящего запроса и некоторых метаданных из <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
      <param name="context">
        <see cref="T:System.Web.Http.OData.ODataQueryContext" />, которое содержит <see cref="T:Microsoft.Data.Edm.IEdmModel" /> и некоторую информацию о типе</param>
      <param name="request">Входящее сообщение запроса</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions`1.ApplyTo(System.Linq.IQueryable)">
      <summary>Примените отдельный запрос к данному IQueryable в правильном порядке.</summary>
      <returns>Запрос, к которому был применен запрос.</returns>
      <param name="query">IQueryable, к которому применяется запрос.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions`1.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Примените отдельный запрос к данному IQueryable в правильном порядке.</summary>
      <returns>Запрос, к которому был применен запрос.</returns>
      <param name="query">IQueryable, к которому применяется запрос.</param>
      <param name="querySettings">Настройки, используемые при построении запроса.</param>
    </member>
    <member name="T:System.Web.Http.OData.Query.ODataQuerySettings">
      <summary>Этот класс описывает параметры, которые будут использоваться во время построения запроса.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQuerySettings.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" /> и инициализирует параметры по умолчанию.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQuerySettings.#ctor(System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Инициализация нового экземпляра класса <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" /> на основе существующего.</summary>
      <param name="settings">Копируемый параметр.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQuerySettings.EnableConstantParameterization">
      <summary>Получает или задает значение, указывающее, необходимо ли параметризировать константы. Для оптимальной производительности параметризации констант необходимо использовать инфраструктуру данных Entity Framework.</summary>
      <returns>По умолчанию используется значение true.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQuerySettings.EnsureStableOrdering">
      <summary>Получает или задает значение, которое определяет, изменит ли построение запроса стандартный запрос при необходимости для обеспечения устойчивого порядка сортировки.</summary>
      <returns>Значение true указывает на то, что стандартный запрос будет изменен при необходимости для обеспечения устойчивого порядка сортировки. Значение false указывает, что порядок сортировки можно считать устойчивым без изменения запроса. Поставщики запросов, которые обеспечивают устойчивый порядок сортировки, должны задать значение false. По умолчанию используется значение true.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQuerySettings.HandleNullPropagation">
      <summary>Получает или задает значение, указывающее, как должно обрабатываться распространение значения null при построении запроса.</summary>
      <returns>По умолчанию используется значение <see cref="F:System.Web.Http.OData.Query.HandleNullPropagationOption.Default" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQuerySettings.PageSize">
      <summary>Получает или задает максимальное количество возвращаемых результатов запроса.</summary>
      <returns>Максимальное количество возвращаемых результатов или null, если количество не ограничено.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Query.ODataRawQueryOptions">
      <summary>Представляет необработанные значения запроса из входящего запроса в строковом формате</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataRawQueryOptions.#ctor"></member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Expand">
      <summary>Получает необработанное значение запроса $expand из идентификатора Uri входящего запроса, если он существует.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Filter">
      <summary>Получает необработанное значение запроса $filter из идентификатора Uri входящего запроса, если он существует.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Format">
      <summary>Получает необработанное значение запроса $format из идентификатора Uri входящего запроса, если он существует.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.InlineCount">
      <summary>Получает необработанное значение запроса $inlineCount из идентификатора Uri входящего запроса, если он существует.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.OrderBy">
      <summary>Получает необработанное значение запроса $orderby из идентификатора Uri входящего запроса, если он существует.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Select">
      <summary>Получает необработанное значение запроса $select из идентификатора Uri входящего запроса, если он существует.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Skip">
      <summary>Получает необработанное значение запроса $skip из идентификатора Uri входящего запроса, если он существует.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.SkipToken">
      <summary>Получает необработанное значение запроса $skiptoken из идентификатора Uri входящего запроса, если он существует.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Top">
      <summary>Получает необработанное значение запроса $top из идентификатора Uri входящего запроса, если он существует.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Query.ODataValidationSettings">
      <summary> Этот класс описывает параметры проверки для выполнения запроса. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataValidationSettings.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.AllowedArithmeticOperators">
      <summary> Получает или задает список допустимых арифметических операторов, включая add, sub, mul, div, mod. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.AllowedFunctions">
      <summary>  Получает или задает список допустимых функций, используемых в запросе $filter.         </summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.AllowedLogicalOperators">
      <summary> Получает или задает список логических операторов, таких как eq, ne, gt, ge, lt, le, and, or, not. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.AllowedOrderByProperties">
      <summary> Получает список свойств, с помощью которых можно упорядочить результаты. Обратите внимание, что по умолчанию список пуст, фактически это означает, что его можно упорядочить с помощью любого свойства.  Например, пустая коллекция означает, что клиент может упорядочить результат содержимого запроса на основе любого свойства.   Добавление свойства «Имя» к этому списку означает, что допускается заказ содержимого запроса только на основе свойства «Имя». </summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.AllowedQueryOptions">
      <summary> Получает или устанавливает параметры запроса, которые допускаются в запросе. По умолчанию ими являются все параметры запроса, включая $filter, $skip, $top, $orderby, $expand, $select, $inlineCount, $format и $skipToken. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.MaxAnyAllExpressionDepth">
      <summary> Получает или устанавливает максимальную глубину встраивания элементов Any или All в запросе. </summary>
      <returns> Максимальная глубина встраивания элементов Any или All в запросе. </returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.MaxNodeCount">
      <summary> Получает или задает максимальное количество узлов синтаксического дерева $filter. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.MaxSkip">
      <summary> Получает или устанавливает максимальное значение параметра $skip, который может запрашиваться клиентом. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.MaxTop">
      <summary> Получает или устанавливает максимальное значение параметра $top, который может запрашиваться клиентом. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.OrderByItNode">
      <summary> Представляет порядок с помощью выражения $it в предложении $orderby. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByItNode.#ctor(Microsoft.Data.OData.Query.OrderByDirection)">
      <summary> Создает новый экземпляр класса <see cref="T:System.Web.Http.OData.Query.OrderByItNode" />. </summary>
      <param name="direction">
        <see cref="T:Microsoft.Data.OData.Query.OrderByDirection" /> для данного узла.</param>
    </member>
    <member name="T:System.Web.Http.OData.Query.OrderByNode">
      <summary> Представляет единственный порядок с помощью выражения в предложении $orderby. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByNode.#ctor(Microsoft.Data.OData.Query.OrderByDirection)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Query.OrderByNode" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByNode.CreateCollection(Microsoft.Data.OData.Query.SemanticAst.OrderByClause)">
      <summary> Создает коллекцию экземпляров <see cref="T:System.Web.Http.OData.Query.OrderByPropertyNode" /> из связанного списка экземпляров <see cref="T:Microsoft.Data.OData.Query.SemanticAst.OrderByClause" />. </summary>
      <returns>Коллекция новых экземпляров <see cref="T:System.Web.Http.OData.Query.OrderByPropertyNode" />.</returns>
      <param name="orderByClause">Заголовок связанного списка <see cref="T:Microsoft.Data.OData.Query.SemanticAst.OrderByClause" />.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByNode.Direction">
      <summary> Получает <see cref="T:Microsoft.Data.OData.Query.OrderByDirection" /> для текущего узла. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.OrderByPropertyNode">
      <summary>Представляет порядок с помощью выражения <see cref="T:Microsoft.Data.Edm.IEdmProperty" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByPropertyNode.#ctor(Microsoft.Data.Edm.IEdmProperty,Microsoft.Data.OData.Query.OrderByDirection)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Web.Http.OData.Query.OrderByPropertyNode" />.</summary>
      <param name="property">
        <see cref="T:Microsoft.Data.Edm.IEdmProperty" /> для данного узла.</param>
      <param name="direction">
        <see cref="T:Microsoft.Data.OData.Query.OrderByDirection" /> для данного узла.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByPropertyNode.Property">
      <summary>Получает <see cref="T:Microsoft.Data.Edm.IEdmProperty" /> для текущего узла.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.OrderByQueryOption">
      <summary>Этим определяются параметры запроса $orderby OData для выполнения запроса.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByQueryOption.#ctor(System.String,System.Web.Http.OData.ODataQueryContext)">
      <summary>Инициализируйте новый экземпляр <see cref="T:System.Web.Http.OData.Query.OrderByQueryOption" /> на основе необработанных значений $orderby и модели EdmModel из <see cref="T:System.Web.Http.OData.ODataQueryContext" /> .</summary>
      <param name="rawValue">Необработанное значение запроса $orderby. Это может быть значение null или пустое значение.</param>
      <param name="context">
        <see cref="T:System.Web.Http.OData.ODataQueryContext" />, которое содержит <see cref="T:Microsoft.Data.Edm.IEdmModel" /> и некоторую информацию о типе</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByQueryOption.ApplyTo(System.Linq.IQueryable)">
      <summary>Примените запрос $orderby к данному IQueryable.</summary>
      <returns>Запрос, к которому был применен запрос orderby.</returns>
      <param name="query">IQueryable, к которому применяется запрос orderby.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByQueryOption.ApplyTo``1(System.Linq.IQueryable{``0})">
      <summary>  Примените запрос $orderby к данному IQueryable.</summary>
      <returns>Запрос, к которому был применен запрос orderby.</returns>
      <param name="query">IQueryable, к которому применяется запрос orderby.</param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByQueryOption.Context">
      <summary>Получает данный <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByQueryOption.OrderByNodes">
      <summary>Получает коллекцию экземпляров <see cref="T:System.Web.Http.OData.Query.OrderByPropertyNode" /> для текущего <see cref="T:System.Web.Http.OData.Query.OrderByQueryOption" />.</summary>
      <returns>Возвращает значение <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByQueryOption.RawValue">
      <summary>Получает необработанное значение $orderby.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByQueryOption.Validate(System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Проверьте запрос orderby на основе данного <paramref name="validationSettings" />. При сбое проверки он вызывает конструктор ODataException.</summary>
      <param name="validationSettings">Экземпляр <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" />, который содержит все параметры проверки.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByQueryOption.Validator">
      <summary>Получает или задает проверяющий элемент управления для запроса OrderBy.</summary>
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.Query.Validators.OrderByQueryValidator" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Query.QueryFilterProvider">
      <summary>Реализация <see cref="T:System.Web.Http.Filters.IFilterProvider" />, при которой фильтр действий применяется к любому действию с <see cref="T:System.Linq.IQueryable" />, или возвращаемый тип <see cref="T:System.Linq.IQueryable`1" />, который не привязывает параметр типа <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.QueryFilterProvider.#ctor(System.Web.Http.Filters.IActionFilter)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Query.QueryFilterProvider" />.</summary>
      <param name="queryFilter">Фильтр действий, который выполняет запрос.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.QueryFilterProvider.GetFilters(System.Web.Http.HttpConfiguration,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Предоставляет фильтры для применения к указанному действию.</summary>
      <returns>Фильтры для применения к указанному действию.</returns>
      <param name="configuration">Конфигурация сервера.</param>
      <param name="actionDescriptor">Дескриптор действия для действия, для которого предоставляются фильтры.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.QueryFilterProvider.QueryFilter">
      <summary>Получает фильтр действий, выполняющий запрос.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.SkipQueryOption">
      <summary>Этим определяются параметры запроса $skip OData для выполнения запроса.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.SkipQueryOption.#ctor(System.String,System.Web.Http.OData.ODataQueryContext)">
      <summary>Инициализируйте новый экземпляр <see cref="T:System.Web.Http.OData.Query.SkipQueryOption" /> на основе необработанных значений $skip и модели EdmModel из <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
      <param name="rawValue">Необработанное значение запроса $skip. Это может быть значение null или пустое значение.</param>
      <param name="context">
        <see cref="T:System.Web.Http.OData.ODataQueryContext" />, которое содержит <see cref="T:Microsoft.Data.Edm.IEdmModel" /> и некоторую информацию о типе</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.SkipQueryOption.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings)">
      <returns>Возвращает значение <see cref="T:System.Linq.IQueryable" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Query.SkipQueryOption.ApplyTo``1(System.Linq.IQueryable{``0},System.Web.Http.OData.Query.ODataQuerySettings)">
      <returns>Возвращает значение <see cref="T:System.Linq.IQueryable`1" />.</returns>
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Query.SkipQueryOption.Context">
      <summary>Получает данный <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.SkipQueryOption.RawValue">
      <summary>Получает необработанное значение $skip.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Query.SkipQueryOption.Validate(System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Проверьте запрос skip на основе данного <paramref name="validationSettings" />. При сбое проверки вызывает конструктор ODataException.</summary>
      <param name="validationSettings">Экземпляр <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" />, который содержит все параметры проверки.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.SkipQueryOption.Validator">
      <summary>  Получает или задает проверяющий элемент управления для запросов Skip.</summary>
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.Query.Validators.SkipQueryValidator" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.SkipQueryOption.Value">
      <summary>Получает значение $skip как проанализированное целое число.</summary>
      <returns>Возвращает значение <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Query.TopQueryOption">
      <summary>Этим определяются параметры запроса $top OData для выполнения запроса.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.TopQueryOption.#ctor(System.String,System.Web.Http.OData.ODataQueryContext)">
      <summary>Инициализируйте новый экземпляр <see cref="T:System.Web.Http.OData.Query.TopQueryOption" /> на основе необработанного значения $top и модели EdmModel из <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
      <param name="rawValue">Необработанное значение для запроса $top. Это может быть значение null или пустое значение.</param>
      <param name="context">
        <see cref="T:System.Web.Http.OData.ODataQueryContext" />, которое содержит <see cref="T:Microsoft.Data.Edm.IEdmModel" /> и некоторую информацию о типе</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.TopQueryOption.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings)">
      <returns>Возвращает значение <see cref="T:System.Linq.IQueryable" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Query.TopQueryOption.ApplyTo``1(System.Linq.IQueryable{``0},System.Web.Http.OData.Query.ODataQuerySettings)">
      <returns>Возвращает значение <see cref="T:System.Linq.IOrderedQueryable`1" />.</returns>
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Query.TopQueryOption.Context">
      <summary>Получает данный <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.TopQueryOption.RawValue">
      <summary>Получает необработанное значение $top.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Query.TopQueryOption.Validate(System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Проверьте запрос top на основе данного <paramref name="validationSettings" />. При сбое проверки он вызывает конструктор ODataException.</summary>
      <param name="validationSettings">Экземпляр <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" />, который содержит все параметры проверки.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.TopQueryOption.Validator">
      <summary>Получает или задает проверяющий элемент управления для запросов Top.</summary>
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.Query.Validators.TopQueryValidator" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.TopQueryOption.Value">
      <summary>Получает значение $top как проанализированное целое число.</summary>
      <returns>Возвращает значение <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Query.Validators.FilterQueryValidator">
      <summary> Определите класс проверяющего элемента управления, который используется для проверки свойства FilterQueryOption на основе настроек.  </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Query.Validators.FilterQueryValidator" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.Validate(System.Web.Http.OData.Query.FilterQueryOption,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Точка входа этого класса проверяющего элемента управления. Используйте этот метод, чтобы проверить свойство FilterQueryOption. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateAllNode(Microsoft.Data.OData.Query.SemanticAst.AllNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Переопределите этот метод, чтобы ограничить запрос «все» в запросе на фильтрацию.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateAnyNode(Microsoft.Data.OData.Query.SemanticAst.AnyNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Переопределите метод, чтобы ограничить запрос «любые» в запросе на фильтрацию.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateArithmeticOperator(Microsoft.Data.OData.Query.SemanticAst.BinaryOperatorNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Переопределите метод для арифметических операторов, включая add, sub, mul, div, mod. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateBinaryOperatorNode(Microsoft.Data.OData.Query.SemanticAst.BinaryOperatorNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Переопределите этот метод, чтобы ограничить двоичные операторы в запросе на фильтрацию. К ним относятся все логические операторы, кроме «not» и все математические операторы. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateCollectionPropertyAccessNode(Microsoft.Data.OData.Query.SemanticAst.CollectionPropertyAccessNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Переопределите этот метод, чтобы проверить метод доступа к свойствам коллекции. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateConstantNode(Microsoft.Data.OData.Query.SemanticAst.ConstantNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Переопределите метод, чтобы ограничить «константу» в запросе на фильтрацию. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateConvertNode(Microsoft.Data.OData.Query.SemanticAst.ConvertNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Переопределите метод, чтобы ограничить «приведение» в запросе на фильтрацию. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateEntityCollectionCastNode(Microsoft.Data.OData.Query.SemanticAst.EntityCollectionCastNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Переопределите метод, если необходимо проверить приведения для коллекций сущностей. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateLogicalOperator(Microsoft.Data.OData.Query.SemanticAst.BinaryOperatorNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Переопределите метод, чтобы сравнить логические_операторы, такие как «eq», «ne», «gt», «ge», «lt», «le» и «or».  Обратите внимание, что к ним не относится оператор «not». Переопределите параметр ValidateUnaryOperatorNode, чтобы настроить оператор «not». </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateNavigationPropertyNode(Microsoft.Data.OData.Query.SemanticAst.QueryNode,Microsoft.Data.Edm.IEdmNavigationProperty,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Переопределите этот метод для узла свойств навигации. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateQueryNode(Microsoft.Data.OData.Query.SemanticAst.QueryNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Переопределите метод, если необходимо перейти к каждому узлу в запросе.  </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateRangeVariable(Microsoft.Data.OData.Query.SemanticAst.RangeVariable,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Переопределите метод, чтобы проверить параметр, который используется в запросе на фильтрацию. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateSingleEntityCastNode(Microsoft.Data.OData.Query.SemanticAst.SingleEntityCastNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Переопределите метод, если необходимо проверить приведения для одной сущности. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateSingleValueFunctionCallNode(Microsoft.Data.OData.Query.SingleValueFunctionCallNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Переопределите метод, чтобы проверить вызовы функций, такие как «length», «years» и т.д. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateSingleValuePropertyAccessNode(Microsoft.Data.OData.Query.SemanticAst.SingleValuePropertyAccessNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Переопределите этот метод, чтобы проверить метод доступа к свойствам. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateUnaryOperatorNode(Microsoft.Data.OData.Query.SemanticAst.UnaryOperatorNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Переопределите этот метод, чтобы проверить оператор «Not» </summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.Validators.ODataQueryValidator"></member>
    <member name="M:System.Web.Http.OData.Query.Validators.ODataQueryValidator.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Query.Validators.ODataQueryValidator" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.ODataQueryValidator.Validate(System.Web.Http.OData.Query.ODataQueryOptions,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Проверьте, соответствует ли содержимое свойства ODataQueryOption содержимому класса AllowedQueryOptions. По умолчанию можно использовать все четыре оператора. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.Validators.OrderByQueryValidator"></member>
    <member name="M:System.Web.Http.OData.Query.Validators.OrderByQueryValidator.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Query.Validators.OrderByQueryValidator" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.OrderByQueryValidator.Validate(System.Web.Http.OData.Query.OrderByQueryOption,System.Web.Http.OData.Query.ODataValidationSettings)"></member>
    <member name="T:System.Web.Http.OData.Query.Validators.SkipQueryValidator"></member>
    <member name="M:System.Web.Http.OData.Query.Validators.SkipQueryValidator.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Query.Validators.SkipQueryValidator" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.SkipQueryValidator.Validate(System.Web.Http.OData.Query.SkipQueryOption,System.Web.Http.OData.Query.ODataValidationSettings)"></member>
    <member name="T:System.Web.Http.OData.Query.Validators.TopQueryValidator"></member>
    <member name="M:System.Web.Http.OData.Query.Validators.TopQueryValidator.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Query.Validators.TopQueryValidator" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.TopQueryValidator.Validate(System.Web.Http.OData.Query.TopQueryOption,System.Web.Http.OData.Query.ODataValidationSettings)"></member>
    <member name="T:System.Web.Http.OData.Routing.ActionPathSegment">
      <summary>Реализация <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" />, представляющая вызов действия.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ActionPathSegment.#ctor(Microsoft.Data.Edm.IEdmFunctionImport)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.ActionPathSegment" />.</summary>
      <param name="action">Вызываемое действие.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ActionPathSegment.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.ActionPathSegment" />.</summary>
      <param name="actionName">Имя действия.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ActionPathSegment.Action">
      <summary>Получает вызываемое действие.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.Data.Edm.IEdmFunctionImport" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ActionPathSegment.ActionName">
      <summary>Получает имя действия.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ActionPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Получает тип EDM для этого сегмента.</summary>
      <returns>Тип EDM для этого сегмента.</returns>
      <param name="previousEdmType">Тип EDM предыдущего сегмента пути.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ActionPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Получает набор сущностей для этого сегмента.</summary>
      <returns>Набор сущностей для этого сегмента.</returns>
      <param name="previousEntitySet">Набор сущностей предыдущего сегмента пути.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ActionPathSegment.SegmentKind">
      <summary>Получает вид сегмента для текущего сегмента.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ActionPathSegment.ToString">
      <summary>Возвращает объект <see cref="T:System.String" />, который представляет этот экземпляр.</summary>
      <returns>Объект <see cref="T:System.String" />, который представляет этот экземпляр.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.BatchPathSegment">
      <summary>Реализация <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" />, представляющая сегмент $batch.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.BatchPathSegment.#ctor"></member>
    <member name="M:System.Web.Http.OData.Routing.BatchPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>   Получает тип EDM для этого сегмента.</summary>
      <returns>Тип EDM для этого сегмента.</returns>
      <param name="previousEdmType">Тип EDM предыдущего сегмента пути.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.BatchPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Получает набор сущностей для этого сегмента.</summary>
      <returns>Набор сущностей для этого сегмента.</returns>
      <param name="previousEntitySet">Набор сущностей предыдущего сегмента пути.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.BatchPathSegment.SegmentKind">
      <summary>Получает вид сегмента для текущего сегмента.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.BatchPathSegment.ToString">
      <summary>Возвращает объект <see cref="T:System.String" />, который представляет этот экземпляр.</summary>
      <returns>Объект <see cref="T:System.String" />, который представляет этот экземпляр.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.CastPathSegment">
      <summary>Реализация <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" />, представляющая приведение.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.CastPathSegment.#ctor(Microsoft.Data.Edm.IEdmEntityType)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.CastPathSegment" />.</summary>
      <param name="castType">Тип приведения.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.CastPathSegment.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.CastPathSegment" />.</summary>
      <param name="castTypeName">Имя типа приведения.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.CastPathSegment.CastType">
      <summary>Получает тип приведения.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.Data.Edm.IEdmEntityType" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.CastPathSegment.CastTypeName">
      <summary>  Получает имя типа приведения.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.CastPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Получает тип EDM для этого сегмента.</summary>
      <returns>  Тип EDM для этого сегмента.</returns>
      <param name="previousEdmType">Тип EDM предыдущего сегмента пути.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.CastPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Получает набор сущностей для этого сегмента.</summary>
      <returns>Набор сущностей для этого сегмента.</returns>
      <param name="previousEntitySet">Набор сущностей предыдущего сегмента пути.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.CastPathSegment.SegmentKind">
      <summary>Получает вид сегмента для текущего сегмента.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.CastPathSegment.ToString">
      <summary>Возвращает объект <see cref="T:System.String" />, который представляет этот экземпляр.</summary>
      <returns>Объект <see cref="T:System.String" />, который представляет этот экземпляр.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.DefaultODataPathHandler">
      <summary> Выполняет синтаксический анализ пути OData как <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> и преобразует <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> в ссылку OData. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.DefaultODataPathHandler" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.Link(System.Web.Http.OData.Routing.ODataPath)">
      <summary> Преобразует экземпляр <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> в ссылку OData. </summary>
      <returns> Сгенерированная ссылка OData. </returns>
      <param name="path">Путь OData, который необходимо преобразовать в ссылку.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.Parse(Microsoft.Data.Edm.IEdmModel,System.String)">
      <summary> Выполняет синтаксический анализ указанного пути OData как <see cref="T:System.Web.Http.OData.Routing.ODataPath" />, который содержит дополнительные сведения о типе EDM и наборе сущностей для пути. </summary>
      <returns>Представление выполненного синтаксического анализа пути или null, если путь не совпадает с моделью.</returns>
      <param name="model">Модель, которую необходимо использовать для синтаксического разбора пути.</param>
      <param name="odataPath">Путь OData, синтаксический анализ которого необходимо провести.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseAtCollection(Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
      <summary> Выполняет синтаксический анализ следующего сегмента пути OData, который следует за коллекцией. </summary>
      <returns>Представление выполненного синтаксического анализа сегмента.</returns>
      <param name="model">Модель, которую необходимо использовать для синтаксического разбора пути.</param>
      <param name="previous">Предыдущий сегмент пути.</param>
      <param name="previousEdmType">Тип EDM пути OData вплоть до предыдущего сегмента.</param>
      <param name="segment">Значение сегмента, синтаксический анализ которого необходимо провести.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseAtComplex(Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
      <summary> Выполняет синтаксический анализ следующего сегмента пути OData, который следует за сегментом сложного типа. </summary>
      <returns>Представление выполненного синтаксического анализа сегмента.</returns>
      <param name="model">Модель, которую необходимо использовать для синтаксического разбора пути.</param>
      <param name="previous">Предыдущий сегмент пути.</param>
      <param name="previousEdmType">Тип EDM пути OData вплоть до предыдущего сегмента.</param>
      <param name="segment">Значение сегмента, синтаксический анализ которого необходимо провести.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseAtEntity(Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
      <summary> Выполняет синтаксический анализ следующего сегмента пути OData, который следует за сущностью. </summary>
      <returns>Представление выполненного синтаксического анализа сегмента.</returns>
      <param name="model">Модель, которую необходимо использовать для синтаксического разбора пути.</param>
      <param name="previous">Предыдущий сегмент пути.</param>
      <param name="previousEdmType">Тип EDM пути OData вплоть до предыдущего сегмента.</param>
      <param name="segment">Значение сегмента, синтаксический анализ которого необходимо провести.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseAtEntityCollection(Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
      <summary> Выполняет синтаксический анализ следующего сегмента пути OData, который следует за коллекцией сущностей. </summary>
      <returns>Представление выполненного синтаксического анализа сегмента.</returns>
      <param name="model">Модель, которую необходимо использовать для синтаксического разбора пути.</param>
      <param name="previous">Предыдущий сегмент пути.</param>
      <param name="previousEdmType">Тип EDM пути OData вплоть до предыдущего сегмента.</param>
      <param name="segment">Значение сегмента, синтаксический анализ которого необходимо провести.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseAtPrimitiveProperty(Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
      <summary> Выполняет синтаксический анализ следующего сегмента пути OData, который следует за простым свойством. </summary>
      <returns>Представление выполненного синтаксического анализа сегмента.</returns>
      <param name="model">Модель, которую необходимо использовать для синтаксического разбора пути.</param>
      <param name="previous">Предыдущий сегмент пути.</param>
      <param name="previousEdmType">Тип EDM пути OData вплоть до предыдущего сегмента.</param>
      <param name="segment">Значение сегмента, синтаксический анализ которого необходимо провести.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseEntrySegment(Microsoft.Data.Edm.IEdmModel,System.String)">
      <summary> Выполняет синтаксический анализ первого сегмента OData, который следует за базовым идентификатором URI службы. </summary>
      <returns>Представление выполненного синтаксического анализа сегмента.</returns>
      <param name="model">Модель, которую необходимо использовать для синтаксического разбора пути.</param>
      <param name="segment">Значение сегмента, синтаксический анализ которого необходимо провести.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseNextSegment(Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
      <summary> Выполняет синтаксический анализ следующего сегмента пути OData. </summary>
      <returns>Представление выполненного синтаксического анализа сегмента.</returns>
      <param name="model">Модель, которую необходимо использовать для синтаксического разбора пути.</param>
      <param name="previous">Предыдущий сегмент пути.</param>
      <param name="previousEdmType">Тип EDM пути OData вплоть до предыдущего сегмента.</param>
      <param name="segment">Значение сегмента, синтаксический анализ которого необходимо провести.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseSegments(System.String)">
      <summary> Выполняет синтаксический анализ пути OData в сегментах. </summary>
      <returns>Сегменты пути OData.</returns>
      <param name="odataPath">Путь OData.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.EntitySetPathSegment">
      <summary>Реализация <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" />, представляющая набор сущностей.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.EntitySetPathSegment.#ctor(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.EntitySetPathSegment" />.</summary>
      <param name="entitySet">Получен доступ к набору сущностей.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.EntitySetPathSegment.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.EntitySetPathSegment" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Routing.EntitySetPathSegment.EntitySet">
      <returns>Возвращает значение <see cref="T:Microsoft.Data.Edm.IEdmEntitySet" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.EntitySetPathSegment.EntitySetName">
      <summary>Получает имя набора сущностей.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.EntitySetPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>   Получает тип EDM для этого сегмента.</summary>
      <returns>Тип EDM для этого сегмента.</returns>
      <param name="previousEdmType">Тип EDM предыдущего сегмента пути.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.EntitySetPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>   Получает набор сущностей для этого сегмента.</summary>
      <returns>Набор сущностей для этого сегмента.</returns>
      <param name="previousEntitySet">Набор сущностей предыдущего сегмента пути.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.EntitySetPathSegment.SegmentKind">
      <summary>Получает вид сегмента для текущего сегмента.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.EntitySetPathSegment.ToString">
      <summary>Возвращает объект <see cref="T:System.String" />, который представляет этот экземпляр.</summary>
      <returns>Объект <see cref="T:System.String" />, который представляет этот экземпляр.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.IODataPathHandler">
      <summary> Предоставляет возможность синтаксического анализа пути OData как <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> и преобразует <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> в ссылку OData. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.IODataPathHandler.Link(System.Web.Http.OData.Routing.ODataPath)">
      <summary> Преобразует экземпляр <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> в ссылку OData. </summary>
      <returns>Сгенерированная ссылка OData.</returns>
      <param name="path">Путь OData, который необходимо преобразовать в ссылку.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.IODataPathHandler.Parse(Microsoft.Data.Edm.IEdmModel,System.String)">
      <summary> Выполняет синтаксический анализ указанного пути OData как <see cref="T:System.Web.Http.OData.Routing.ODataPath" />, который содержит дополнительные сведения о типе EDM и наборе сущностей для пути. </summary>
      <returns>Выполненный синтаксический анализ URI-адреса или null, если идентификатор URI не совпадает с моделью.</returns>
      <param name="model">Модель, которую необходимо использовать для синтаксического разбора пути.</param>
      <param name="odataPath">Путь OData, синтаксический анализ которого необходимо провести.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.KeyValuePathSegment">
      <summary>Реализация <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" />, представляющая индексацию в коллекции сущностей с помощью ключа.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.KeyValuePathSegment.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.KeyValuePathSegment" />.</summary>
      <param name="value">Значение ключа, которое необходимо использовать для индексации в коллекции.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.KeyValuePathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Получает тип EDM для этого сегмента.</summary>
      <returns>Тип EDM для этого сегмента.</returns>
      <param name="previousEdmType">Тип EDM предыдущего сегмента пути.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.KeyValuePathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Получает набор сущностей для этого сегмента.</summary>
      <returns>Набор сущностей для этого сегмента.</returns>
      <param name="previousEntitySet">Набор сущностей предыдущего сегмента пути.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.KeyValuePathSegment.SegmentKind">
      <summary>Получает вид сегмента для текущего сегмента.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.KeyValuePathSegment.ToString">
      <summary>Возвращает объект <see cref="T:System.String" />, который представляет этот экземпляр.</summary>
      <returns>Объект <see cref="T:System.String" />, который представляет этот экземпляр.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.KeyValuePathSegment.Value">
      <summary>Получает значение ключа, которое необходимо использовать для индексации в коллекции.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.LinksPathSegment">
      <summary>Реализация <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" />, представляющая сегмент $links.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.LinksPathSegment.#ctor"></member>
    <member name="M:System.Web.Http.OData.Routing.LinksPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>  Получает тип EDM для этого сегмента.</summary>
      <returns>Тип EDM для этого сегмента.</returns>
      <param name="previousEdmType">Тип EDM предыдущего сегмента пути.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.LinksPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Получает набор сущностей для этого сегмента.</summary>
      <returns>Набор сущностей для этого сегмента.</returns>
      <param name="previousEntitySet">Набор сущностей предыдущего сегмента пути.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.LinksPathSegment.SegmentKind">
      <summary>Получает вид сегмента для текущего сегмента.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.LinksPathSegment.ToString">
      <summary>Возвращает объект <see cref="T:System.String" />, который представляет этот экземпляр.</summary>
      <returns>Объект <see cref="T:System.String" />, который представляет этот экземпляр.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.MetadataPathSegment">
      <summary>Реализация <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" />, представляющая сегмент $metadata.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.MetadataPathSegment.#ctor"></member>
    <member name="M:System.Web.Http.OData.Routing.MetadataPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>  Получает тип EDM для этого сегмента.</summary>
      <returns>Тип EDM для этого сегмента.</returns>
      <param name="previousEdmType">Тип EDM предыдущего сегмента пути.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.MetadataPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>  Получает набор сущностей для этого сегмента.</summary>
      <returns>Набор сущностей для этого сегмента.</returns>
      <param name="previousEntitySet">Набор сущностей предыдущего сегмента пути.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.MetadataPathSegment.SegmentKind">
      <summary>Получает вид сегмента для текущего сегмента.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.MetadataPathSegment.ToString">
      <summary>Возвращает объект <see cref="T:System.String" />, который представляет этот экземпляр.</summary>
      <returns>Объект <see cref="T:System.String" />, который представляет этот экземпляр.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.NavigationPathSegment">
      <summary>Реализация <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" />, представляющая навигацию.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.NavigationPathSegment.#ctor(Microsoft.Data.Edm.IEdmNavigationProperty)">
      <summary>  Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.NavigationPathSegment" />.</summary>
      <param name="navigationProperty">Свойство навигации, доступ к которому осуществляется с помощью этого сегмента.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.NavigationPathSegment.#ctor(System.String)">
      <summary>  Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.NavigationPathSegment" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.NavigationPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Получает тип EDM для этого сегмента.</summary>
      <returns>Тип EDM для этого сегмента.</returns>
      <param name="previousEdmType">Тип EDM предыдущего сегмента пути.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.NavigationPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Получает набор сущностей для этого сегмента.</summary>
      <returns>Набор сущностей для этого сегмента.</returns>
      <param name="previousEntitySet">Набор сущностей предыдущего сегмента пути.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.NavigationPathSegment.NavigationProperty">
      <summary>Получает свойство навигации, доступ к которому осуществляется с помощью этого сегмента.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.Data.Edm.IEdmNavigationProperty" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.NavigationPathSegment.NavigationPropertyName">
      <summary>Получает имя свойства навигации.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.NavigationPathSegment.SegmentKind">
      <summary>Получает вид сегмента для текущего сегмента.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.NavigationPathSegment.ToString">
      <summary>Возвращает объект <see cref="T:System.String" />, который представляет этот экземпляр.</summary>
      <returns>Объект <see cref="T:System.String" />, который представляет этот экземпляр.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataActionSelector">
      <summary> Реализация <see cref="T:System.Web.Http.Controllers.IHttpActionSelector" />, который использует соглашения маршрутизации OData сервера, чтобы выбрать действие для запросов OData. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataActionSelector.#ctor(System.Web.Http.Controllers.IHttpActionSelector)">
      <summary> Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.ODataActionSelector" />. </summary>
      <param name="innerSelector">Селектор внутреннего контроллера, который необходимо вызвать.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataActionSelector.GetActionMapping(System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary> Возвращает карту с ключами по строке действия для всех <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" />, которые может выбирать селектор.  Этот метод в основном вызывается в <see cref="T:System.Web.Http.Description.IApiExplorer" /> для обнаружения всех возможных действий в контроллере. </summary>
      <returns> Карта всех <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" />, которые может выбрать селектор, или значение null, если селектор не имеет четко определенного отображения <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" />. </returns>
      <param name="controllerDescriptor">Дескриптор контроллера.</param>
      <exception cref="T:System.NotImplementedException"></exception>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataActionSelector.SelectAction(System.Web.Http.Controllers.HttpControllerContext)">
      <summary> Выбирает действие для <see cref="T:System.Web.Http.Controllers.ApiControllerActionSelector" />. </summary>
      <returns> Выбранное действие. </returns>
      <param name="controllerContext">Контекст контроллера.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataPath">
      <summary>Предоставляет представление объекта для пути OData вместе с дополнительными сведениями о типе EDM и набором сущностей для пути.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPath.#ctor(System.Collections.Generic.IList{System.Web.Http.OData.Routing.ODataPathSegment})">
      <summary>  Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.ODataPath" />.</summary>
      <param name="segments">Типы сегментов для пути.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPath.#ctor(System.Web.Http.OData.Routing.ODataPathSegment[])">
      <summary>  Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.ODataPath" />.</summary>
      <param name="segments">Типы сегментов для пути.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPath.EdmType">
      <summary>Получает или устанавливает тип EDM для пути.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.Data.Edm.IEdmType" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPath.EntitySet">
      <summary>Получает или устанавливает набор сущностей для пути.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.Data.Edm.IEdmEntitySet" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPath.PathTemplate">
      <summary>Получает шаблон пути, описывающий типы сегментов в пути.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPath.Segments">
      <summary>Получает типы сегментов для пути OData.</summary>
      <returns>Возвращает значение <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPath.ToString">
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataPathParameterBindingAttribute">
      <summary> Реализация <see cref="T:System.Web.Http.ParameterBindingAttribute" />, используемая, чтобы привязать экземпляр <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> как параметр действия. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathParameterBindingAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.ODataPathParameterBindingAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathParameterBindingAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary> Получает привязку параметра. </summary>
      <returns> Привязка параметра. </returns>
      <param name="parameter">Описание параметра.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataPathRouteConstraint">
      <summary> Реализация <see cref="T:System.Web.Http.Routing.IHttpRouteConstraint" />, которая совпадает только с путями OData. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathRouteConstraint.#ctor(System.Web.Http.OData.Routing.IODataPathHandler,Microsoft.Data.Edm.IEdmModel,System.String,System.Collections.Generic.IEnumerable{System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention})">
      <summary> Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.ODataPathRouteConstraint" />. </summary>
      <param name="pathHandler">Обработчик пути OData, который необходимо использовать для синтаксического разбора пути.</param>
      <param name="model">Модель EDM, которую необходимо использовать для синтаксического разбора пути.</param>
      <param name="routeName">Имя маршрута, с которым связано это ограничение.</param>
      <param name="routingConventions">Соглашения маршрутизации OData, которые необходимо использовать для выбора имени контроллера.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPathRouteConstraint.EdmModel">
      <summary> Получает модель EDM, которую необходимо использовать для синтаксического разбора пути. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary> Определяет, равен ли данный экземпляр указанному маршруту. </summary>
      <returns> Значение true, если этот экземпляр равен указанному маршруту; в противном случае — значение false. </returns>
      <param name="request">Запрос.</param>
      <param name="route">Маршрут для сравнения.</param>
      <param name="parameterName">Имя параметра.</param>
      <param name="values">Список значений параметров.</param>
      <param name="routeDirection">Направление маршрута.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPathRouteConstraint.PathHandler">
      <summary> Получает обработчик пути OData, который необходимо использовать для синтаксического разбора. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPathRouteConstraint.RouteName">
      <summary> Получает имя пути, с которым связано это ограничение. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPathRouteConstraint.RoutingConventions">
      <summary> Получает соглашения маршрутизации OData, которые необходимо использовать для выбора имени контроллера. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathRouteConstraint.SelectControllerName(System.Web.Http.OData.Routing.ODataPath,System.Net.Http.HttpRequestMessage)">
      <summary> Выбирает имя контроллера, чтобы направить к нему запрос. </summary>
      <returns>Имя контроллера, к которому выполняется направление, или null, если его не удается сопоставить.</returns>
      <param name="path">Путь OData запроса.</param>
      <param name="request">Запрос.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataPathSegment">
      <summary>Предоставляет представление объекта для сегмента пути OData вместе с дополнительными сведениями о типе EDM и набором сущностей для пути.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathSegment.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Получает тип EDM для этого сегмента.</summary>
      <returns>Тип EDM для этого сегмента.</returns>
      <param name="previousEdmType">Тип EDM предыдущего сегмента пути.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>  Получает набор сущностей для этого сегмента.</summary>
      <returns>Набор сущностей для этого сегмента.</returns>
      <param name="previousEntitySet">Набор сущностей предыдущего сегмента пути.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPathSegment.SegmentKind">
      <summary>Получает вид сегмента для текущего сегмента.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataRouteConstants"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.Action"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.ConstraintName"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.Controller"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.Key"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.NavigationProperty"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.ODataPath"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.ODataPathTemplate"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.RelatedKey"></member>
    <member name="T:System.Web.Http.OData.Routing.ODataSegmentKinds">
      <summary>Предоставляет значения видов сегментов для реализаций <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" />.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Action"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Batch"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Cast"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.EntitySet"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Key"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Links"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Metadata"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Navigation"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Property"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.ServiceBase"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Unresolved"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Value"></member>
    <member name="T:System.Web.Http.OData.Routing.PropertyAccessPathSegment">
      <summary>Реализация <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" />, представляющая доступ к свойству.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.PropertyAccessPathSegment.#ctor(Microsoft.Data.Edm.IEdmProperty)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.PropertyAccessPathSegment" />.</summary>
      <param name="property">Свойство, доступ к которому осуществляется с помощью этого сегмента.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.PropertyAccessPathSegment.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.PropertyAccessPathSegment" />.</summary>
      <param name="propertyName">Имя свойства.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.PropertyAccessPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Получает тип EDM для этого сегмента.</summary>
      <returns>Тип EDM для этого сегмента.</returns>
      <param name="previousEdmType">Тип EDM предыдущего сегмента пути.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.PropertyAccessPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>  Получает набор сущностей для этого сегмента.</summary>
      <returns>Набор сущностей для этого сегмента.</returns>
      <param name="previousEntitySet">Набор сущностей предыдущего сегмента пути.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.PropertyAccessPathSegment.Property">
      <summary>Получает свойство свойства, доступ к которому осуществляется с помощью этого сегмента.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.Data.Edm.IEdmProperty" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.PropertyAccessPathSegment.PropertyName">
      <summary>Получает имя свойства.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.PropertyAccessPathSegment.SegmentKind">
      <summary>Получает вид сегмента для текущего сегмента.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.PropertyAccessPathSegment.ToString">
      <summary>Возвращает объект <see cref="T:System.String" />, который представляет этот экземпляр.</summary>
      <returns>Объект <see cref="T:System.String" />, который представляет этот экземпляр.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.UnresolvedPathSegment">
      <summary>Реализация <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" />, представляющая сегмент, который невозможно сопоставить.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.UnresolvedPathSegment.#ctor(System.String)">
      <summary>  Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.UnresolvedPathSegment" />.</summary>
      <param name="segmentValue">Значение несопоставленного сегмента.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.UnresolvedPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <returns>Тип EDM предыдущего сегмента пути.</returns>
      <param name="previousEdmType">Получает тип EDM для этого сегмента.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.UnresolvedPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Получает набор сущностей для этого сегмента.</summary>
      <returns>Набор сущностей для этого сегмента.</returns>
      <param name="previousEntitySet">Набор сущностей предыдущего сегмента пути.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.UnresolvedPathSegment.SegmentKind">
      <summary>Получает вид сегмента для текущего сегмента.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.UnresolvedPathSegment.SegmentValue">
      <summary>Получает значение несопоставленного сегмента.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.UnresolvedPathSegment.ToString">
      <summary>Возвращает объект <see cref="T:System.String" />, который представляет этот экземпляр.</summary>
      <returns>Объект <see cref="T:System.String" />, который представляет этот экземпляр.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ValuePathSegment">
      <summary>Реализация <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" />, представляющая сегмент $value.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ValuePathSegment.#ctor"></member>
    <member name="M:System.Web.Http.OData.Routing.ValuePathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Получает тип EDM для этого сегмента.</summary>
      <returns>Тип EDM для этого сегмента.</returns>
      <param name="previousEdmType">Тип EDM предыдущего сегмента пути.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ValuePathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Получает набор сущностей для этого сегмента.</summary>
      <returns>Набор сущностей для этого сегмента.</returns>
      <param name="previousEntitySet">Набор сущностей предыдущего сегмента пути.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ValuePathSegment.SegmentKind">
      <summary>Получает вид сегмента для текущего сегмента.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ValuePathSegment.ToString">
      <summary>Возвращает объект <see cref="T:System.String" />, который представляет этот экземпляр.</summary>
      <returns>Объект <see cref="T:System.String" />, который представляет этот экземпляр.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.ActionRoutingConvention">
      <summary> Реализация <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" />, которая обрабатывает вызовы действий. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.ActionRoutingConvention.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.Conventions.ActionRoutingConvention" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.ActionRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary> Выбирает действие для запросов OData. </summary>
      <returns>Значение null, если маршрут не обрабатывается этим соглашением, или же это имя выбранного действия </returns>
      <param name="odataPath">Путь OData.</param>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="actionMap">Сопоставление действий.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.EntityRoutingConvention">
      <summary> Реализация <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" />, которая обрабатывает операции сущностей, выполняемые с помощью ключей. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.EntityRoutingConvention.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.Conventions.EntityRoutingConvention" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.EntityRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary> Выбирает действие для запросов OData. </summary>
      <returns>Значение null, если маршрут не обрабатывается этим соглашением, или же это имя выбранного действия </returns>
      <param name="odataPath">Путь OData.</param>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="actionMap">Сопоставление действий.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.EntitySetRoutingConvention">
      <summary> Реализация <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" />, которая обрабатывает наборы сущностей. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.EntitySetRoutingConvention.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.Conventions.EntitySetRoutingConvention" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.EntitySetRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary> Выбирает действие для запросов OData. </summary>
      <returns>Значение null, если маршрут не обрабатывается этим соглашением, или же это имя выбранного действия </returns>
      <param name="odataPath">Путь OData.</param>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="actionMap">Сопоставление действий.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.EntitySetRoutingConvention.SelectController(System.Web.Http.OData.Routing.ODataPath,System.Net.Http.HttpRequestMessage)">
      <summary> Выбирает контроллер для запросов OData. </summary>
      <returns>Значение null, если маршрут не обрабатывается этим соглашением, или же это имя выбранного контроллера </returns>
      <param name="odataPath">Путь OData.</param>
      <param name="request">Запрос.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention">
      <summary> Предоставляет абстракцию для выбора контроллера и действия для запросов OData. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary> Выбирает действие для запросов OData. </summary>
      <returns>Значение null, если маршрут не обрабатывается этим соглашением, или же это имя выбранного действия</returns>
      <param name="odataPath">Путь OData.</param>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="actionMap">Сопоставление действий.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention.SelectController(System.Web.Http.OData.Routing.ODataPath,System.Net.Http.HttpRequestMessage)">
      <summary> Выбирает контроллер для запросов OData. </summary>
      <returns>Значение null, если маршрут не обрабатывается этим соглашением, или же это имя выбранного контроллера</returns>
      <param name="odataPath">Путь OData.</param>
      <param name="request">Запрос.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.LinksRoutingConvention">
      <summary> Реализация <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" />, которая обрабатывает операции со ссылками. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.LinksRoutingConvention.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.Conventions.LinksRoutingConvention" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.LinksRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary> Выбирает действие. </summary>
      <param name="odataPath">Путь OData.</param>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="actionMap">Сопоставление действий.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.MetadataRoutingConvention">
      <summary> Реализация <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" />, которая обрабатывает запросы метаданных OData. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.MetadataRoutingConvention.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.Conventions.MetadataRoutingConvention" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.MetadataRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary> Выбирает действие для запросов OData. </summary>
      <returns>Значение null, если маршрут не обрабатывается этим соглашением, или же это имя выбранного действия </returns>
      <param name="odataPath">Путь OData.</param>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="actionMap">Сопоставление действий.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.MetadataRoutingConvention.SelectController(System.Web.Http.OData.Routing.ODataPath,System.Net.Http.HttpRequestMessage)">
      <summary> Выбирает контроллер для запросов OData. </summary>
      <returns>Значение null, если маршрут не обрабатывается этим соглашением, или же это имя выбранного контроллера </returns>
      <param name="odataPath">Путь OData.</param>
      <param name="request">Запрос.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.NavigationRoutingConvention">
      <summary> Реализация <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" />, которая обрабатывает свойства навигации. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.NavigationRoutingConvention.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.Conventions.NavigationRoutingConvention" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.NavigationRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary> Выбирает действие. </summary>
      <param name="odataPath">Путь OData.</param>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="actionMap">Сопоставление действий.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.ODataRoutingConventions">
      <summary> Предоставляет вспомогательные методы для создания соглашений о маршрутизации. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.ODataRoutingConventions.CreateDefault">
      <summary> Создает изменяемую коллекцию соглашений о маршрутизации протокола OData по умолчанию. </summary>
      <returns>Изменяемая коллекция соглашений о маршрутизации протокола OData по умолчанию.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.UnmappedRequestRoutingConvention">
      <summary> Реализация <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" />, которая всегда выбирает действие с названием HandleUnmappedRequest при наличии действия. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.UnmappedRequestRoutingConvention.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.Conventions.UnmappedRequestRoutingConvention" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.UnmappedRequestRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary> Выбирает действие. </summary>
      <param name="odataPath">Путь OData.</param>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="actionMap">Сопоставление действий.</param>
    </member>
  </members>
</doc>